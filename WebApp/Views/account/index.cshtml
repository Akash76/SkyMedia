@using System.Diagnostics;

@using AzureSkyMedia.WebApp.Models;

@section head {
    <script type="text/javascript">
        function AddEntityCells(inventoryHtml, entityCount, className) {
            if (className != null) {
                inventoryHtml = inventoryHtml + "<td class='" + className + "'>";
            } else {
                inventoryHtml = inventoryHtml + "<td>";
            }
            if (entityCount.length > 2) {
                inventoryHtml = inventoryHtml + "<span class=\"siteLink\" onclick=\"window.location.href = '" + entityCount[2] + "'\">" + entityCount[0] + "</span>";
            } else {
                inventoryHtml = inventoryHtml + entityCount[0];
            }
            return inventoryHtml + "</td><td class='entityCount'>" + entityCount[1] + "</td>";
        }
        function AddEntityRow(inventoryHtml, entityCounts, rowIndex) {
            var entityIndex = rowIndex;
            inventoryHtml = inventoryHtml + "<tr>";
            inventoryHtml = AddEntityCells(inventoryHtml, entityCounts[entityIndex], null);
            entityIndex = rowIndex + 12;
            if (entityIndex < entityCounts.length) {
                inventoryHtml = AddEntityCells(inventoryHtml, entityCounts[entityIndex], "indexerEntity");
            }
            return inventoryHtml + "</tr>";
        }
        function DisplayAccountInventory() {
            var inventoryHtml = "";
            var entityCounts = @Json.Serialize(ViewData["entityCounts"]);
            for (var rowIndex = 0; rowIndex < 12; rowIndex++) {
                inventoryHtml = AddEntityRow(inventoryHtml, entityCounts, rowIndex);
            }
            $("#accountInventory").html(inventoryHtml);
        }
        function ToggleAuthToken() {
            if ($("#authToken").is(":visible")) {
                $("#authToken").hide();
            } else {
                $("#authToken").show();
            }
        }
        function ClearAccount() {
            var title = "Clear Media Account";
            var message = "Which set of entities do you want to delete from your media account?";
            var buttons = {
                "All Entities": function () {
                    DeleteEntities(false);
                    $(this).dialog("close");
                },
                "Skip Live": function () {
                    DeleteEntities(true);
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            };
            DisplayMessage(title, message, buttons);
        }
        function DeleteEntities(skipLive) {
            SetCursor(true);
            $.post("/account/deleteEntities",
                {
                    skipLive: skipLive
                },
                function () {
                    SetCursor(false);
                    window.location = window.location.href;
                }
            );
        }
        $(function () {
            DisplayAccountInventory();
            CreateTipTop("userAuthToken", "User Auth Token");
            CreateTipTop("mediaAccountClear", "Media Account Clear");
            CreateTipTop("authToken", "Azure Active Directory (B2C)<br><br>JSON Web Token (JWT)");
        })
    </script>
}

@section title {
    Media Account
}

<table id="accountInventory" class="accountInventory"></table>

<div class="viewButtons">
    <partial name="SiteButton" model='new SiteButton { ControlId = "userAuthToken", ImageFile = "UserAuthToken.png", OnClick = "ToggleAuthToken()", AltText = "Toggle User Auth Token" }' />
    @if (Debugger.IsAttached)
    {
        <partial name="SiteButton" model='new SiteButton { ControlId = "mediaAccountClear", ImageFile = "MediaAccountClear.png", OnClick = "ClearAccount()", AltText = "Clear Account" }' />
    }
</div>

<div id="authToken" class="authToken">
    @ViewData["authToken"]
</div>