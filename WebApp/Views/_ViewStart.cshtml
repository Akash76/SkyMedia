@using Microsoft.AspNetCore.Http;

@using AzureSkyMedia.PlatformServices;
@using AzureSkyMedia.WebApp.Controllers;

@{
    HttpRequest request = Context.Request;
    HttpResponse response = Context.Response;

    string authToken = HomeController.GetAuthToken(request, response);
    ViewData["authToken"] = authToken;
    if (!string.IsNullOrEmpty(authToken))
    {
        HomeController.SetAccountContext(authToken, ViewData);
    }

    string settingKey = Constant.AppSettingKey.AppTitle;
    string appTitle = HomeController.GetAppSetting(settingKey);
    settingKey = Constant.AppSettingKey.AppRegionName;
    string appRegionName = HomeController.GetAppSetting(settingKey);
    if (!string.IsNullOrEmpty(appRegionName))
    {
        appTitle = string.Concat(appTitle, " (", appRegionName, ")");
    }
    ViewData["appTitle"] = appTitle;

    string ampVersion = request.Query["amp.version"];
    if (string.IsNullOrEmpty(ampVersion))
    {
        settingKey = Constant.AppSettingKey.MediaPlayerVersion;
        ampVersion = HomeController.GetAppSetting(settingKey);
    }
    ViewData["mediaPlayerVersion"] = ampVersion;

    string ampSkin = request.Query["amp.skin"];
    if (string.IsNullOrEmpty(ampSkin))
    {
        settingKey = Constant.AppSettingKey.MediaPlayerSkin;
        ampSkin = HomeController.GetAppSetting(settingKey);
    }
    ViewData["mediaPlayerSkin"] = ampSkin;

    string amcVersion = request.Query["amc.version"];
    if (string.IsNullOrEmpty(amcVersion))
    {
        settingKey = Constant.AppSettingKey.MediaClipperVersion;
        amcVersion = HomeController.GetAppSetting(settingKey);
    }
    ViewData["mediaClipperVersion"] = amcVersion;

    settingKey = Constant.AppSettingKey.StorageCdnEndpointUrl;
    ViewData["storageCdnUrl"] = HomeController.GetAppSetting(settingKey);

    string accountSignUpIn = "/account/signUpIn";
    if (request.QueryString.HasValue)
    {
        accountSignUpIn = string.Concat(accountSignUpIn, request.QueryString.Value);
    }
    ViewData["accountSignUpIn"] = accountSignUpIn;
    ViewData["accountSignOut"] = string.Concat("SignOut('", Constant.HttpCookie.UserAuthToken, "')");
    ViewData["accountProfileEdit"] = "/account/profileEdit";

    ViewData["spacingPatterns"] = Constant.TextFormatter.SpacingPatterns;
    ViewData["spacingInserts"] = Constant.TextFormatter.SpacingInserts;

    string requestUrl = string.Concat(request.Host, request.Path, request.QueryString);
    if (!requestUrl.Contains("/account/signIn") && !requestUrl.Contains("/account/password") &&
        !requestUrl.Contains("/account/profile") && !requestUrl.Contains("/asset/sprite"))
    {
        Layout = "_Layout";
    }
}