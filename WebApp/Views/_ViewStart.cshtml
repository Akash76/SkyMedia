@using AzureSkyMedia.PlatformServices;
@using AzureSkyMedia.WebApp.Controllers;

@using Microsoft.AspNetCore.Http;

@{
    HttpRequest request = this.Context.Request;
    HttpResponse response = this.Context.Response;
    string authToken = homeController.GetAuthToken(request, response);
    ViewData["authTokenCookie"] = Constant.HttpCookie.UserAuthToken;
    ViewData["authToken"] = authToken;

    if (!string.IsNullOrEmpty(authToken))
    {
        User authUser = new User(authToken);
        ViewData["accountContext"] = string.Concat(authUser.Id, " (", authUser.MediaAccountId, ")");
    }

    string settingKey = Constant.AppSettingKey.AppRegionName;
    ViewData["appRegionName"] = homeController.GetAppSetting(settingKey);

    string ampVersion = this.Context.Request.Query["amp.version"];
    if (string.IsNullOrEmpty(ampVersion))
    {
        settingKey = Constant.AppSettingKey.MediaPlayerVersion;
        ampVersion = homeController.GetAppSetting(settingKey);
    }
    ViewData["mediaPlayerVersion"] = ampVersion;

    string ampSkin = this.Context.Request.Query["amp.skin"];
    if (string.IsNullOrEmpty(ampSkin))
    {
        settingKey = Constant.AppSettingKey.MediaPlayerSkin;
        ampSkin = homeController.GetAppSetting(settingKey);
    }
    ViewData["mediaPlayerSkin"] = ampSkin;

    settingKey = Constant.AppSettingKey.StorageCdnUrl;
    ViewData["storageCdnUrl"] = homeController.GetAppSetting(settingKey);

    ViewData["accountSignUpIn"] = "/account/signupin";
    ViewData["accountProfileEdit"] = "/account/profileEdit";

    string requestUrl = string.Concat(request.Host, request.Path, request.QueryString);
    if (!requestUrl.Contains("/account/signup") && !requestUrl.Contains("/account/profile"))
    {
        Layout = "_Layout";
    }
}