@using AzureSkyMedia.PlatformServices;

@{
    MediaStream[] mediaStreams = ViewData["mediaStreams"] as MediaStream[];
    int streamNumber = int.Parse(ViewData["streamNumber"].ToString());
    string autoPlay = ViewData["autoPlay"] as string;
    string authToken = ViewData["authToken"] as string;
    string languageCode = ViewData["languageCode"] as string;
    string storageCdnUrl = ViewData["storageCdnUrl"] as string;
    string accountMessage = ViewData["accountMessage"] as string;
}

@section head {
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amp/@ViewData["mediaPlayerVersion"]/skins/@ViewData["mediaPlayerSkin"]/azuremediaplayer.min.css" />
    <link type="text/css" rel="stylesheet" href="~/css/amve.min.css" />
    <script type="text/javascript" src="//amp.azure.net/libs/amp/@ViewData["mediaPlayerVersion"]/azuremediaplayer.min.js"></script>
    <script type="text/javascript" src="~/js/amve.min.js"></script>
    <script type="text/javascript" src="~/js/clipper.js"></script>
    <script type="text/javascript" src="~/js/metadata.js"></script>
    <script type="text/javascript">
        function GetStreamName(mediaStream, streamSlider) {
            var streamName = mediaStream.name;
            if (!streamSlider) {
                streamName = streamName.replace("<br /><br />", " ");
            }
            if (mediaStream.protectionTypes.length > 0) {
                var lineBreak = streamSlider ? "<br /><br />" : "<br />";
                streamName = streamName + lineBreak + "(" + mediaStream.protectionTypes.join(", ") + ")";
            }
            return streamName;
        }
        function SlideStreamNumber(slideDirection) {
            var streamNumber = _streamNumber;
            if (slideDirection == "left" && streamNumber > 1) {
                streamNumber = streamNumber - 1;
            } else if (slideDirection == "right" && streamNumber < _mediaStreams.length) {
                streamNumber = streamNumber + 1;
            }
            window.location.href = "/?stream=" + streamNumber;
        }
        function SetStreamNumber(streamNumber) {
            var sliderHandle = document.getElementsByClassName("ui-slider-handle")[0];
            if (streamNumber == 1 || streamNumber == _mediaStreams.length) {
                sliderHandle.innerText = "";
            } else {
                sliderHandle.innerText = streamNumber;
            }
        }
        function SetStreamName(mediaStream) {
            var streamName = GetStreamName(mediaStream, false);
            $("#streamName").html(streamName);
        }
        function GetMediaStreams() {
            var mediaStreams = @Json.Serialize(ViewData["mediaStreams"]);
            for (var i = 0; i < mediaStreams.length; i++) {
                for (var t = 0; t < mediaStreams[i].textTracks.length; t++) {
                    var languageCode = mediaStreams[i].textTracks[t].srclang;
                    mediaStreams[i].textTracks[t].label = GetLanguageLabel(languageCode);
                }
            }
            return mediaStreams;
        }
        $(function () {
            _mediaStreams = GetMediaStreams();
            _streamNumber = @streamNumber;
            _authToken = "@authToken";
            var mediaStream = (_mediaStreams.length == 0) ? null : _mediaStreams[_streamNumber - 1];
            var sliderWidth = $("#streamSlider").width();
            var sliderStep = (_mediaStreams.length < 2) ? sliderWidth : Math.floor(sliderWidth / (_mediaStreams.length - 1));
            var sliderValue = (_streamNumber - 1) * sliderStep;
            var accountMessage = "@accountMessage";
            $("#streamSlider").slider({
                min: 0,
                max: sliderWidth,
                step: sliderStep,
                value: sliderValue,
                classes: {
                    "ui-slider-handle": "streamSliderHandle"
                },
                slide: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        var streamNumber = (_mediaStreams.length == 1) ? 1 : (ui.value / sliderStep) + 1;
                        var mediaStream = _mediaStreams[streamNumber - 1];
                        var streamName = GetStreamName(mediaStream, true);
                        CreateTipTopLeft("streamSlider", streamName, ui.value + 2, -15);
                        SetTipVisible("streamSlider", true);
                        SetStreamNumber(streamNumber);
                    }
                },
                stop: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        _streamNumber = (_mediaStreams.length == 1) ? 1 : (ui.value / sliderStep) + 1;
                        window.location.href = "/?stream=" + _streamNumber;
                    }
                }
            });
            var mediaPlayer = GetMediaPlayer(false);
            mediaPlayer.ready(function () {
                if (_authToken != "" && _mediaStreams.length > 0) {
                    var controlBarRight = document.getElementsByClassName("amp-controlbaricons-right")[0];
                    var controlButtonClasses = "vjs-control vjs-button mediaPlayerButton";
                    var videoClipperImage = document.createElement("img");
                    videoClipperImage.id = "videoClipperImage";
                    videoClipperImage.src = "@storageCdnUrl" + "/MediaClipper.png";
                    var videoClipperButton = document.createElement("button");
                    videoClipperButton.id = "videoClipperButton";
                    videoClipperButton.className = controlButtonClasses;
                    videoClipperButton.appendChild(videoClipperImage);
                    controlBarRight.appendChild(videoClipperButton);
                    $("#videoClipperButton").click(function () {
                        mediaPlayer.pause();
                        DisplayVideoClipper("@languageCode");
                    });
                    var mediaStream = _mediaStreams[_streamNumber - 1];
                    if (mediaStream.analyticsMetadata.length > 0) {
                        var analyticsPanelImage = document.createElement("img");
                        analyticsPanelImage.id = "analyticsPanelImage";
                        analyticsPanelImage.src = "@storageCdnUrl" + "/MediaAnalyticsIn.png";
                        var analyticsPanelButton = document.createElement("button");
                        analyticsPanelButton.id = "analyticsPanelButton";
                        analyticsPanelButton.className = controlButtonClasses;
                        analyticsPanelButton.appendChild(analyticsPanelImage);
                        controlBarRight.appendChild(analyticsPanelButton);
                        $("#analyticsPanelButton").click(function () {
                            ToggleMediaAnalytics();
                        });
                    }
                }
            });
            mediaPlayer.addEventListener(amp.eventName.play, function () {
                var streamUrl = mediaPlayer.currentSrc();
                streamUrl = streamUrl.replace("https:", "");
                streamUrl = streamUrl.replace("http:", "");
                streamUrl = streamUrl.split("/");
                for (var i = streamUrl.length - 2; i > streamUrl.length - 5; i--) {
                    streamUrl[i] = streamUrl[i] + "<br />";
                }
                streamUrl = streamUrl.join("/");
                $("#streamUrl").html(streamUrl);
                ClearVideoOverlay();
            });
            mediaPlayer.addEventListener(amp.eventName.pause, function () {
                if ($("#analyticsPanel").is(":visible")) {
                    //SetMediaMetadata();
                }
            });
            window.onresize = ResetMediaMetadata;
            window.onorientationchange = ResetMediaMetadata;
            if (mediaStream == null) {
                SetPlayerSpinner(false);
            } else {
                SetPlayerContent(mediaPlayer, mediaStream, "@languageCode", @autoPlay);
                SetAnalyticsProcessors(mediaStream);
                SetStreamNumber(_streamNumber);
                SetStreamName(mediaStream);
            }
            if (accountMessage != "") {
                DisplayMessage("Account Message", accountMessage);
            }
        })
    </script>
}

@section title {
    Azure Sky Media
}

<table>
    <tr>
        <td class="mediaContent">
            @Html.Partial("MediaPlayer", false)
        </td>
        <td id="analyticsPanel" class="analyticsPanel">
            <table>
                <tr>
                    <td class="inputLabel">
                        <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-analytics-overview')">
                            Azure Media Analytics
                        </span>
                    </td>
                    <td>
                        <select id="analyticsProcessors" class="analyticsProcessors" onchange="SetMediaMetadata()"></select>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div id="mediaTranscript" class="mediaAnalytics" style="display: none"></div>
                        <div id="mediaMetadata" class="mediaAnalytics"></div>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>

@Html.Partial("MediaBar", mediaStreams)

<div id="clipperDialog" style="display: none">
    @Html.Partial("MediaPlayer", true)
</div>

<div class="streamInfo">
    <div id="streamName" class="streamName"></div>
    <div id="streamUrl" class="streamUrl"></div>
</div>
