@using AzureSkyMedia.PlatformServices;

@{
    MediaStream[] mediaStreams = ViewData["mediaStreams"] as MediaStream[];
    int streamNumber = int.Parse(ViewData["streamNumber"].ToString());

    string ampVersion = ViewData["mediaPlayerVersion"] as string;
    string ampSkin = ViewData["mediaPlayerSkin"] as string;

    string amcVersion = ViewData["mediaClipperVersion"] as string;

    string autoPlay = ViewData["autoPlay"] as string;
    string languageCode = ViewData["languageCode"] as string;

    string authToken = ViewData["authToken"] as string;
    string accountMessage = ViewData["accountMessage"] as string;

    string storageCdnUrl = ViewData["storageCdnUrl"] as string;
}

@section head {
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amp/@ampVersion/skins/@ampSkin/azuremediaplayer.min.css" />
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amc/@amcVersion/azuremediaclipper.css">
    <script type="text/javascript" src="//amp.azure.net/libs/amp/@ampVersion/azuremediaplayer.min.js"></script>
    <script type="text/javascript" src="//amp.azure.net/libs/amc/@amcVersion/azuremediaclipper.min.js"></script>
    <script type="text/javascript" src="https://breakdown.blob.core.windows.net/public/amp-vb.plugin.js"></script>
    <script type="text/javascript" src="~/js/clipper.js"></script>
    <script type="text/javascript" src="~/js/home.js"></script>
    <script type="text/javascript">
        $(function () {
            _authToken = "@authToken";
            _mediaStreams = @Json.Serialize(ViewData["mediaStreams"]);
            _streamNumber = @streamNumber;
            var accountMessage = "@accountMessage";
            var mediaStream = _mediaStreams.length == 0 ? null : _mediaStreams[_streamNumber - 1];
            var sliderWidth = $("#streamSlider").width();
            var sliderStep = _mediaStreams.length == 1 ? sliderWidth : Math.floor(sliderWidth / (_mediaStreams.length - 1));
            var sliderValue = (_streamNumber - 1) * sliderStep;
            $("#streamSlider").slider({
                min: 0,
                max: sliderWidth,
                step: sliderStep,
                value: sliderValue,
                classes: {
                    "ui-slider-handle": "streamSliderHandle"
                },
                slide: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        var streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        var mediaStream = _mediaStreams[streamNumber - 1];
                        var streamName = GetStreamName(mediaStream, true);
                        CreateTipTopLeft("streamSlider", streamName, ui.value + 2, -15);
                        SetTipVisible("streamSlider", true);
                        SetStreamNumber(streamNumber);
                    }
                },
                stop: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        _streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        window.location.href = "/?stream=" + _streamNumber;
                    }
                }
            });
            var mediaPlayer = GetMediaPlayer(false);
            mediaPlayer.ready(function () {
                this.videobreakdown({
                    syncTranscript: true,
                    syncLanguage: true
                });
                if (_authToken != "" && _mediaStreams.length > 0) {
                    var controlBarRight = document.getElementsByClassName("amp-controlbaricons-right")[0];
                    var controlButtonCss = "vjs-control vjs-button mediaPlayerButton";
                    var clipperImage = document.createElement("img");
                    clipperImage.id = "clipperImage";
                    clipperImage.src = "@storageCdnUrl" + "/MediaClipperOpen.png";
                    var clipperButton = document.createElement("button");
                    clipperButton.id = "clipperButton";
                    clipperButton.className = controlButtonCss;
                    clipperButton.appendChild(clipperImage);
                    controlBarRight.appendChild(clipperButton);
                    $("#clipperButton").click(function () {
                        @*mediaPlayer.pause();
                        DisplayVideoClipper("@languageCode");*@
                    });
                    for (var i = 0; i < mediaStream.contentInsight.length; i++) {
                        var insight = mediaStream.contentInsight[i];
                        if (insight.processor == 3) { // Video Indexer
                            var insightImage = document.createElement("img");
                            insightImage.id = "insightImage";
                            insightImage.src = "@storageCdnUrl" + "/MediaInsightOpen.png";
                            var insightButton = document.createElement("button");
                            insightButton.id = "insightButton";
                            insightButton.className = controlButtonCss;
                            insightButton.appendChild(insightImage);
                            controlBarRight.appendChild(insightButton);
                            $("#insightButton").click(function () {
                                ToggleIndexerInsight(insight);
                            });
                        } else {
                            var metadataImage = document.createElement("img");
                            metadataImage.id = "metadataImage";
                            metadataImage.src = "@storageCdnUrl" + "/MediaMetadataOpen.png";
                            var metadataButton = document.createElement("button");
                            metadataButton.id = "metadataButton";
                            metadataButton.className = controlButtonCss + " mediaMetadata";
                            metadataButton.appendChild(metadataImage);
                            controlBarRight.appendChild(metadataButton);
                            $("#metadataButton").click(function () {
                                ToggleMetadataPanel();
                            });
                        }
                    }
                }
            });
            mediaPlayer.addEventListener(amp.eventName.play, function () {
                var streamUrl = mediaPlayer.currentSrc();
                streamUrl = streamUrl.split("/");
                for (var i = streamUrl.length - 2; i > streamUrl.length - 5; i--) {
                    streamUrl[i] = streamUrl[i] + "<br>";
                }
                var manifestIndex = streamUrl.length - 1;
                streamUrl[manifestIndex] = streamUrl[manifestIndex].replace(",", "<br>,");
                streamUrl = streamUrl.join("/");
                $("#streamUrl").html(streamUrl);
                ClearVideoOverlay();
            });
            mediaPlayer.addEventListener(amp.eventName.pause, function () {
                if ($("#metadataPanel").is(":visible")) {
                    SetAnalyticsMetadata();
                }
            });
            if (mediaStream == null) {
                SetPlayerSpinner(false);
            } else {
                SetPlayerContent(mediaPlayer, mediaStream, "@languageCode", @autoPlay);
                SetStreamNumber(_streamNumber);
                var streamName = GetStreamName(mediaStream, false);
                $("#streamName").html(streamName);
            }
            var title = "Azure Media Streaming Endpoint";
            if (accountMessage == "AMS01") {
                StartStreamingEndpoint(title);
            }
            else if (accountMessage == "AMS02") {
                var message = "Your media account streaming endpoint is in the process of starting.";
                DisplayMessage(title, message);
            } else if (accountMessage != "") {
                DisplayMessage("Account Message", accountMessage);
            }
            window.onorientationchange = ResetVideoOverlay;
            window.onresize = ResetVideoOverlay;
        })
    </script>
}

@section title {
    Azure Sky Media
}

@Html.Partial("MediaPlayer", 0)

<div id="indexerInsight" class="indexerInsight">
    <iframe id="indexerFrame" height="100%" width="100%" frameborder="0"></iframe>
</div>

@Html.Partial("MediaControls", mediaStreams)

<div class="streamInfo">
    <div id="streamName" class="streamName"></div>
    <div id="streamUrl" class="streamUrl"></div>
</div>

<div id="mediaClipper" class="azure-subclipper dark-skin" />

@*<div id="clipperDialog" style="display: none">
    @Html.Partial("MediaPlayer", 1)
</div>*@