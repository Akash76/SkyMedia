@using AzureSkyMedia.PlatformServices;
@using AzureSkyMedia.WebApp.Controllers;

@{
    string userId = ViewData["userId"] as string;
    string authToken = ViewData["authToken"] as string;

    string accountName = ViewData["accountName"] as string;
    string accountMessage = ViewData["accountMessage"] as string;

    MediaStream[] mediaStreams = ViewData["mediaStreams"] as MediaStream[];
    int streamNumber = int.Parse(ViewData["streamNumber"].ToString());
    int streamOffset = int.Parse(ViewData["streamOffset"].ToString());
    int streamIndex = int.Parse(ViewData["streamIndex"].ToString());

    string ampVersion = ViewData["mediaPlayerVersion"] as string;
    string ampSkin = ViewData["mediaPlayerSkin"] as string;

    string autoPlay = ViewData["autoPlay"] as string;
    string languageCode = ViewData["languageCode"] as string;
    string storageCdnUrl = ViewData["storageCdnUrl"] as string;
}

@section head {
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amp/@ampVersion/skins/@ampSkin/azuremediaplayer.min.css" />
    <script type="text/javascript" src="//amp.azure.net/libs/amp/@ampVersion/azuremediaplayer.min.js"></script>
    <script type="text/javascript" src="https://breakdown.blob.core.windows.net/public/amp-vb.plugin.js"></script>
    <script type="text/javascript" src="~/js/amp/amp-appInsights.min.js"></script>
    <script type="text/javascript" src="~/js/insight.js"></script>
    <script type="text/javascript" src="~/js/home.js"></script>
    <script type="text/javascript">
        var _mediaPlayer;
        $(function () {
            _authToken = "@authToken";
            _mediaStreams = @Json.Serialize(ViewData["mediaStreams"]);
            _streamNumber = @streamNumber;
            _streamIndex = @streamIndex;
            var accountMessage = "@accountMessage";
            var mediaStream = _mediaStreams.length == 0 ? null : _mediaStreams[_streamIndex];
            var sliderWidth = $("#streamSlider").width();
            var sliderStep = _mediaStreams.length == 1 ? sliderWidth : Math.floor(sliderWidth / (_mediaStreams.length - 1));
            var sliderValue = _streamIndex * sliderStep;
            $("#streamSlider").slider({
                min: 0,
                max: sliderWidth,
                step: sliderStep,
                value: sliderValue,
                classes: {
                    "ui-slider-handle": "streamSliderHandle"
                },
                slide: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        var streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        var streamIndex = streamNumber - 1;
                        var mediaStream = _mediaStreams[streamIndex];
                        var streamName = GetStreamName(mediaStream, true);
                        streamNumber = streamNumber + @streamOffset;
                        CreateTipTopLeft("streamSlider", streamName, ui.value + 2, -15);
                        SetTipVisible("streamSlider", true);
                        SetStreamNumber(streamNumber, streamIndex);
                    }
                },
                stop: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        _streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        _streamNumber = _streamNumber + @streamOffset;
                        window.location.href = "/?stream=" + _streamNumber;
                    }
                }
            });
            _mediaPlayer = GetMediaPlayer("@userId", "@accountName");
            _mediaPlayer.ready(function () {
                this.videobreakdown({
                    syncTranscript: true,
                    syncLanguage: true
                });
                if (_authToken != "" && _mediaStreams.length > 0) {
                    var controlBarRight = document.getElementsByClassName("amp-controlbaricons-right")[0];
                    var controlButtonCss = "vjs-control vjs-button mediaPlayerButton";
                    if (_mediaPlayer.isLive()) {
                        var cueImage = document.createElement("img");
                        cueImage.id = "cueImage";
                        cueImage.src = "@storageCdnUrl" + "/MediaLiveCue.png";
                        var cueButton = document.createElement("button");
                        cueButton.id = "cueButton";
                        cueButton.className = controlButtonCss;
                        cueButton.appendChild(cueImage);
                        controlBarRight.appendChild(cueButton);
                        $("#cueButton").click(function () {
                            alert("Insert Live Stream Cue");
                        });
                        CreateTipTop("cueButton", "Insert Live<br><br>Cue");
                    }
                    if (mediaStream.contentInsight != null) {
                        var indexerInsight = GetIndexerInsight(mediaStream.contentInsight);
                        if (indexerInsight != null) {
                            var insightImage = document.createElement("img");
                            insightImage.id = "insightImage";
                            insightImage.src = "@storageCdnUrl" + "/MediaInsightOpen.png";
                            var insightButton = document.createElement("button");
                            insightButton.id = "insightButton";
                            insightButton.className = controlButtonCss;
                            insightButton.appendChild(insightImage);
                            controlBarRight.appendChild(insightButton);
                            $("#insightButton").click(function () {
                                ToggleIndexerInsight(indexerInsight);
                            });
                            CreateTipTop("insightButton", "Video Indexer<br><br>Insight");
                        }
                        var analyticsImage = document.createElement("img");
                        analyticsImage.id = "analyticsImage";
                        analyticsImage.src = "@storageCdnUrl" + "/MediaAnalyticsOpen.png";
                        var analyticsButton = document.createElement("button");
                        analyticsButton.id = "analyticsButton";
                        analyticsButton.className = controlButtonCss;
                        analyticsButton.appendChild(analyticsImage);
                        controlBarRight.appendChild(analyticsButton);
                        $("#analyticsButton").click(function () {
                            SetAnalyticsProcessors(mediaStream);
                            ToggleAnalyticsInsight(mediaStream);
                        });
                        CreateTipTop("analyticsButton", "Media Analytics<br><br>Insight");
                    }
                }
            });
            _mediaPlayer.addEventListener(amp.eventName.play, function () {
                var streamUrl = _mediaPlayer.currentSrc();
                streamUrl = streamUrl.split("/");
                for (var i = streamUrl.length - 2; i > streamUrl.length - 5; i--) {
                    streamUrl[i] = streamUrl[i] + "<br>";
                }
                var manifestIndex = streamUrl.length - 1;
                streamUrl[manifestIndex] = streamUrl[manifestIndex].replace(",", "<br>,");
                streamUrl = streamUrl.join("/");
                $("#streamUrl").html(streamUrl);
            });
            if (mediaStream == null) {
                SetPlayerSpinner(false);
            } else {
                SetPlayerContent(_mediaPlayer, mediaStream, "@languageCode", @autoPlay);
                SetStreamNumber(_streamNumber, _streamIndex);
                var streamName = GetStreamName(mediaStream, false);
                $("#streamName").html(streamName);
            }
            if (accountMessage != "") {
                DisplayMessage("Account Message", accountMessage);
            }
        })
    </script>
}

@section title {
    Azure Sky Media
}

@Html.Partial("MediaPlayer")

<div id="indexerInsight" class="indexerInsight">
    <iframe id="indexerFrame" height="100%" width="100%" frameborder="0"></iframe>
</div>

<div id="analyticsInsight" class="analyticsInsight">
    <div class="analyticsProcessors">
        <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-analytics-overview')">
            Azure Media Analytics
        </span>
        <select id="analyticsProcessors" onchange="SetAnalyticsMetadata(_mediaPlayer)"></select>
    </div>
    <div id="analyticsMetadata" class="analyticsMetadata"></div>
</div>

@Html.Partial("MediaControls", new int[] { streamOffset, mediaStreams.Length })

<div class="streamInfo">
    <div id="streamName" class="streamInfoName"></div>
    <div id="streamUrl" class="streamInfoUrl"></div>
</div>

<div class="mediaCertification">
    @Html.Partial("SiteButton", new string[] { "mediaCertification", "MediaCertification.png", "window.open('http://www.microsoft.com/en-us/trustcenter/compliance/cdsa')" })
</div>