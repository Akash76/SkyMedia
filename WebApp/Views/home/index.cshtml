@using AzureSkyMedia.PlatformServices;

@{
    MediaStream[] mediaStreams = ViewData["mediaStreams"] as MediaStream[];
    int streamNumber = int.Parse(ViewData["streamNumber"].ToString());

    string autoPlay = ViewData["autoPlay"] as string;
    string authToken = ViewData["authToken"] as string;
    string languageCode = ViewData["languageCode"] as string;
    string storageCdnUrl = ViewData["storageCdnUrl"] as string;
    string accountMessage = ViewData["accountMessage"] as string;
}

@section head {
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amp/@ViewData["mediaPlayerVersion"]/skins/@ViewData["mediaPlayerSkin"]/azuremediaplayer.min.css" />
    <link type="text/css" rel="stylesheet" href="~/css/amve.min.css" />
    <script type="text/javascript" src="//amp.azure.net/libs/amp/@ViewData["mediaPlayerVersion"]/azuremediaplayer.min.js"></script>
    <script type="text/javascript" src="~/js/amve.min.js"></script>
    <script type="text/javascript" src="~/js/metadata.js"></script>
    <script type="text/javascript" src="~/js/clipper.js"></script>
    <script type="text/javascript" src="~/js/grid.js"></script>
    <script type="text/javascript" src="~/js/home.js"></script>
    <script type="text/javascript">
        $(function () {
            _mediaStreams = @Json.Serialize(ViewData["mediaStreams"]);
            _streamNumber = @streamNumber;
            _authToken = "@authToken";
            var mediaStream = _mediaStreams.length == 0 ? null : _mediaStreams[_streamNumber - 1];
            var sliderWidth = $("#streamSlider").width();
            var sliderStep = _mediaStreams.length < 2 ? sliderWidth : Math.floor(sliderWidth / (_mediaStreams.length - 1));
            var sliderValue = (_streamNumber - 1) * sliderStep;
            var accountMessage = "@accountMessage";
            $("#streamSlider").slider({
                min: 0,
                max: sliderWidth,
                step: sliderStep,
                value: sliderValue,
                classes: {
                    "ui-slider-handle": "streamSliderHandle"
                },
                slide: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        var streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        var mediaStream = _mediaStreams[streamNumber - 1];
                        var streamName = GetStreamName(mediaStream, true);
                        CreateTipTopLeft("streamSlider", streamName, ui.value + 2, -15);
                        SetTipVisible("streamSlider", true);
                        SetStreamNumber(streamNumber);
                    }
                },
                stop: function (event, ui) {
                    if (_mediaStreams.length > 0) {
                        _streamNumber = _mediaStreams.length == 1 ? 1 : (ui.value / sliderStep) + 1;
                        window.location.href = "/?stream=" + _streamNumber;
                    }
                }
            });
            var mediaPlayer = GetMediaPlayer(false);
            mediaPlayer.ready(function () {
                if (_authToken != "" && _mediaStreams.length > 0) {
                    var controlBarRight = document.getElementsByClassName("amp-controlbaricons-right")[0];
                    var controlButtonCss = "vjs-control vjs-button mediaPlayerButton";
                    var videoClipperImage = document.createElement("img");
                    videoClipperImage.id = "videoClipperImage";
                    videoClipperImage.src = "@storageCdnUrl" + "/MediaClipper.png";
                    var videoClipperButton = document.createElement("button");
                    videoClipperButton.id = "videoClipperButton";
                    videoClipperButton.className = controlButtonCss;
                    videoClipperButton.appendChild(videoClipperImage);
                    controlBarRight.appendChild(videoClipperButton);
                    $("#videoClipperButton").click(function () {
                        mediaPlayer.pause();
                        DisplayVideoClipper("@languageCode");
                    });
                    if (mediaStream.analyticsMetadata.length > 0) {
                        var aiPanelImage = document.createElement("img");
                        aiPanelImage.id = "aiPanelImage";
                        aiPanelImage.src = "@storageCdnUrl" + "/IntelligencePanelOpen.png";
                        var aiPanelButton = document.createElement("button");
                        aiPanelButton.id = "aiPanelButton";
                        aiPanelButton.className = controlButtonCss;
                        aiPanelButton.appendChild(aiPanelImage);
                        controlBarRight.appendChild(aiPanelButton);
                        $("#aiPanelButton").click(function () {
                            ToggleAIPanel();
                        });
                    }
                }
            });
            mediaPlayer.addEventListener(amp.eventName.play, function () {
                var streamUrl = mediaPlayer.currentSrc();
                streamUrl = streamUrl.split("/");
                for (var i = streamUrl.length - 2; i > streamUrl.length - 5; i--) {
                    streamUrl[i] = streamUrl[i] + "<br />";
                }
                streamUrl = streamUrl.join("/");
                $("#streamUrl").html(streamUrl);
                ClearVideoOverlay();
            });
            mediaPlayer.addEventListener(amp.eventName.pause, function () {
                if ($("#aiPanel").is(":visible")) {
                    SetAnalyticsMetadata();
                }
            });
            if (mediaStream == null) {
                SetPlayerSpinner(false);
            } else {
                SetPlayerContent(mediaPlayer, mediaStream, "@languageCode", @autoPlay);
                SetAnalyticsProcessors(mediaStream);
                SetStreamNumber(_streamNumber);
                SetStreamName(mediaStream);
            }
            if (accountMessage != "") {
                DisplayMessage("Account Message", accountMessage);
            }
            window.onorientationchange = ResetVideoOverlay;
            window.onresize = ResetVideoOverlay;
        })
    </script>
}

@section title {
    Azure Sky Media
}

<table>
    <tr>
        <td class="mediaContent">
            @Html.Partial("MediaPlayer", false)
        </td>
        <td id="aiPanel" class="aiPanel">
            <table>
                <tr>
                    <td class="inputLabel">
                        <span class="siteLink" onclick="window.open('http://www.microsoft.com/ai/')">
                            Azure Video AI
                        </span>
                    </td>
                    <td>
                        <select id="analyticsProcessors" class="analyticsProcessors" onchange="SetAnalyticsMetadata()"></select>
                    </td>
                </tr>
                <tr id="mediaSearchRow" style="display: none">
                    <td class="inputLabel">
                        <span class="siteLink" onclick="window.open('http://azure.microsoft.com/en-us/services/search/')">
                            Azure Media Search
                        </span>
                    </td>
                    <td>
                        <input id="mediaSearch" class="mediaSearch" type="text" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div id="mediaTranscript" style="display: none">
                            <table id="transcriptGrid" class="mediaTranscript"></table>
                        </div>
                        <div id="mediaMetadata" class="mediaMetadata"></div>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>

@Html.Partial("MediaBar", mediaStreams)

<div id="clipperDialog" style="display: none">
    @Html.Partial("MediaPlayer", true)
</div>

<div class="streamInfo">
    <div id="streamName" class="streamName"></div>
    <div id="streamUrl" class="streamUrl"></div>
</div>
