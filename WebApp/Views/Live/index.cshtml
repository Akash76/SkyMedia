@using AzureSkyMedia.WebApp.Models;

@{
    string ampVersion = ViewData["mediaPlayerVersion"].ToString();
    string ampSkin = ViewData["mediaPlayerSkin"].ToString();

    string userId = ViewData["userId"] as string;
    string authToken = ViewData["authToken"] as string;
    string accountName = ViewData["accountName"] as string;
    string storageCdnUrl = ViewData["storageCdnUrl"].ToString();

    string liveEventName = ViewData["liveEventName"].ToString();
    string liveEventEncoding = ViewData["liveEventEncoding"].ToString().ToLower();
    string liveEventLowLatency = ViewData["liveEventLowLatency"].ToString().ToLower();
    string liveEventPreviewUrl = ViewData["liveEventPreviewUrl"].ToString();
    string liveEventOutputUrl = ViewData["liveEventOutputUrl"].ToString();
}

@section head {
    <link type="text/css" rel="stylesheet" href="//amp.azure.net/libs/amp/@ampVersion/skins/@ampSkin/azuremediaplayer.min.css" />
    <script type="text/javascript" src="//amp.azure.net/libs/amp/@ampVersion/azuremediaplayer.min.js"></script>
    <script type="text/javascript">
        _liveEventName = "@liveEventName";
        function SetEventPlayer() {
            var liveEventUrl = "@liveEventPreviewUrl";
            if ($("#liveEventUrl:checked").val() == "Published") {
                liveEventUrl = "@liveEventOutputUrl";
            }
            var mediaPlayer = GetMediaPlayer("videoPlayer", "@userId", "@accountName", true, false, @liveEventLowLatency, null);
            SetPlayerEvents(mediaPlayer, "@storageCdnUrl", @liveEventEncoding, false);
            SetPlayerSource(mediaPlayer, liveEventUrl, null, null);
            $("#liveEventUrlType").show();
        }
        $(function () {
            if ("@liveEventPreviewUrl" == "") {
                var title = "Live Event";
                var message = "A live event is currently not running.";
                var buttons = {
                    OK: function () {
                        window.location = "/account/liveEvents";
                        $(this).dialog("close");
                    }
                }
                DisplayMessage(title, message, buttons);
            } else {
                SetEventPlayer();
            }
        })
    </script>
}

@section title {
    Live Event
}

<partial name="MediaPlayer" model='new MediaPlayer { ContainerStyle = "mediaPlayer", ControlId = "videoPlayer", SkinName = ampSkin }' />

<div id="liveEventUrlType" class="liveEventUrlType">
    <input id="liveEventUrl" name="liveEventUrl" type="radio" value="Preview" checked onchange="SetEventPlayer()">
    <span class="inputLabel">
        Preview
    </span>
    &nbsp;
    <input id="liveEventUrl" name="liveEventUrl" type="radio" value="Published" onchange="SetEventPlayer()">
    <span class="inputLabel">
        Published
    </span>
</div>

<div id="streamUrl" class="streamUrl"></div>