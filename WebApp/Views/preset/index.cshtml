@section head {
    <link type="text/css" rel="stylesheet" href="~/lib/json-editor/jsoneditor.css" />
    <script type="text/javascript" src="~/lib/json-editor/jquery.jsoneditor.min.js"></script>
    <script type="text/javascript">
        var _sharedPreset = true;
        function SetProcessorPresets(mediaProcessor) {
            if (mediaProcessor.value == "") {
                $("#mediaProcessorPresetRow").hide();
                $("#mediaProcessorPresetEditor").jsonEditor();
            } else {
                $.post("/preset/options",
                    {
                        mediaProcessor: mediaProcessor.value
                    },
                    function (presetOptions) {
                        var presets = $("#mediaProcessorPreset")[0].options;
                        presets.length = 0;
                        presets[presets.length] = new Option("", "");
                        for (var i = 0; i < presetOptions.length; i++) {
                            var presetOption = presetOptions[i];
                            presets[presets.length] = new Option(presetOption.text, presetOption.value);
                        }
                        $("#mediaProcessorPresetRow").show();
                        $("#mediaProcessorPreset").focus();
                    }
                );
            }
            if (mediaProcessor.value == "EncoderStandard") {
                $("#presetLabel").click(function () {
                    window.open("http://docs.microsoft.com/azure/media-services/media-services-mes-presets-overview");
                });
            } else {
                $("#presetLabel").unbind("click");
            }
        }
        function SetProcessorPreset(presetId) {
            $.post("/preset/config",
                {
                    presetId: presetId.value
                },
                function (presetConfig) {
                    $("#mediaProcessorPresetEditor").jsonEditor(presetConfig);
                }
            );
        }
        function DisplayPresetMessage(message) {
            var title = "Media Processor Preset Editor";
            DisplayMessage(title, message);
        }
        function SavePreset() {
            if (_sharedPreset) {
                var message = "Shared presets cannot be updated. To create a custom preset, change the PresetId property.";
                DisplayPresetMessage(title, message);
            }
        }
        function DeletePreset() {
            if (_sharedPreset) {
                var message = "Shared presets cannot be deleted.";
                DisplayPresetMessage(title, message);
            }
        }
        $(function () {
            CreateTipTop("processorPresetSave", "Media Processor<br><br>Preset Save");
            CreateTipTop("processorPresetDelete", "Media Processor<br><br>Preset Delete");
            $("#mediaProcessor").focus();
        })
    </script>
}

@section title {
    Media Processor Preset Editor
}

<table class="mediaProcessorPresets">
    <tr>
        <td class="inputLabel">
            Media Processor:
        </td>
        <td>
            @Html.DropDownList("mediaProcessor", null, new { onchange = "SetProcessorPresets(this)" })
        </td>
    </tr>
    <tr id="mediaProcessorPresetRow" style="display: none">
        <td class="inputLabel">
            <span id="presetLabel" class="siteLink">
                Media Processor Preset:
            </span>
        </td>
        <td>
            @Html.DropDownList("mediaProcessorPreset", null, new { onchange = "SetProcessorPreset(this)" })
        </td>
    </tr>
</table>

<div id="mediaProcessorPresetEditor" class="json-editor"></div>

<div class="viewButtons">
    <table>
        <tr>
            <td>
                @Html.Partial("SiteButton", new string[] { "processorPresetSave", "MediaProcessorPresetSave.png", "SavePreset()" })
            </td>
            <td>
                @Html.Partial("SiteButton", new string[] { "processorPresetDelete", "MediaProcessorPresetDelete.png", "DeletePreset()" })
            </td>
        </tr>
    </table>
</div>