@{
    int taskNumber = 1;
    string taskRowId = string.Concat("mediaWorkflowTaskRow", taskNumber);
    string taskParentId = string.Concat("taskParent", taskNumber);
    string mediaProcessorId = string.Concat("mediaProcessor", taskNumber);
    string encoderConfigRowId = string.Concat("encoderConfigRow", taskNumber);
    string encoderConfigDocId = string.Concat("encoderConfigDoc", taskNumber);
    string encoderConfigId = string.Concat("encoderConfig", taskNumber);
    string encoderConfigFileRowId = string.Concat("encoderConfigFileRow", taskNumber);
    string encoderConfigFileDocId = string.Concat("encoderConfigFileDoc", taskNumber);
    string encoderConfigFileId = string.Concat("encoderConfigFile", taskNumber);
    string encoderOptionsRowId = string.Concat("encoderOptionsRow", taskNumber);
    string encoderFragmentOutputId = string.Concat("encoderFragmentOutput", taskNumber);
    string contentProtectionIdPrefix = "encoderContentProtection";
    string contentProtectionId = string.Concat(contentProtectionIdPrefix, taskNumber);
    string contentProtectionRowId = string.Concat(contentProtectionIdPrefix, "Row" + taskNumber);
    string contentProtectionAesId = string.Concat(contentProtectionIdPrefix, "Aes" + taskNumber);
    string contentProtectionDrmPlayReadyId = string.Concat(contentProtectionIdPrefix, "DrmPlayReady" + taskNumber);
    string contentProtectionDrmWidevineId = string.Concat(contentProtectionIdPrefix, "DrmWidevine" + taskNumber);
    string contentProtectionDrmFairPlayId = string.Concat(contentProtectionIdPrefix, "DrmFairPlay" + taskNumber);
    string contentProtectionAuthTypeTokenId = string.Concat(contentProtectionIdPrefix, "AuthTypeToken" + taskNumber);
    string contentProtectionAuthTypeAddressId = string.Concat(contentProtectionIdPrefix, "AuthTypeAddress" + taskNumber);
    string contentProtectionAuthAddressRangeId = string.Concat(contentProtectionIdPrefix, "AuthAddressRange" + taskNumber);
    string indexerConfigRowId = string.Concat("indexerConfigRow", taskNumber);
    string indexerSpokenLanguagesId = string.Concat("indexerSpokenLanguages", taskNumber);
    string indexerCaptionWebVttId = string.Concat("indexerCaptionWebVtt", taskNumber);
    string indexerCaptionTtmlId = string.Concat("indexerCaptionTtml", taskNumber);
    string faceDetectionConfigRowId = string.Concat("faceDetectionConfigRow", taskNumber);
    string faceDetectionModeId = string.Concat("faceDetectionMode", taskNumber);
    string faceRedactionConfigRowId = string.Concat("faceRedactionConfigRow", taskNumber);
    string faceRedactionModeId = string.Concat("faceRedactionMode", taskNumber);
    string summaryConfigRowId = string.Concat("summaryConfigRow", taskNumber);
    string summaryDurationMinutesId = string.Concat("summaryDurationMinutes", taskNumber);
    string summaryDurationSecondsId = string.Concat("summaryDurationSeconds", taskNumber);
    string motionConfigRowId = string.Concat("motionConfigRow", taskNumber);
    string motionSensitivityLevelId = string.Concat("motionSensitivityLevel", taskNumber);
    string motionDetectLightChangeId = string.Concat("motionDetectLightChange", taskNumber);
    string hyperlapseConfigRowId = string.Concat("hyperlapseConfigRow", taskNumber);
    string hyperlapseStartFrameId = string.Concat("hyperlapseStartFrame", taskNumber);
    string hyperlapseFrameCountId = string.Concat("hyperlapseFrameCount", taskNumber);
    string hyperlapseSpeedId = string.Concat("hyperlapseSpeed", taskNumber);
    string outputAssetNameId = string.Concat("outputAssetName", taskNumber);
    string taskOptionsId = string.Concat("taskOptions", taskNumber);
}

<tr id="@taskRowId">
    <td class="inputLabel">
        Job Task #@taskNumber:
    </td>
    <td>
        <table class="jobTask">
            <tr>
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-get-media-processor')">
                        Media Processor:
                    </span>
                </td>
                <td>
                    @Html.DropDownList(mediaProcessorId, null, new { @class = "mediaProcessor", onchange = "SetProcessorConfig(this, 1)" })
                    &nbsp;
                    <span class="inputLabel">
                        Use Parent Task #
                    </span>
                    <select id="@taskParentId" class="jobTaskParent" disabled>
                        <option value=""></option>
                    </select>
                    <span class="inputLabel">
                        Output
                    </span>
                </td>
            </tr>
            <tr id="@encoderConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span id="@encoderConfigDocId" class="siteLink">
                        Encoder Config:
                    </span>
                </td>
                <td>
                    @Html.DropDownList(encoderConfigId, null, new { @class = "mediaProcessorConfig", onchange = "SetEncoderConfigOptions(this)" })
                </td>
            </tr>
            <tr id="@encoderConfigFileRowId" style="display: none">
                <td class="inputLabel">
                    <span id="@encoderConfigFileDocId" class="siteLink">
                        Custom Config:
                    </span>
                </td>
                <td>
                    @Html.TextBox(encoderConfigFileId, null, new { @class = "mediaProcessorConfig", type = "file", onchange = "SetEncoderConfig(this)" })
                </td>
            </tr>
            <tr id="@indexerConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-process-content-with-indexer2')">
                        Indexer Config:
                    </span>
                </td>
                <td>
                    <select id="@indexerSpokenLanguagesId" multiple="multiple"></select>
                    &nbsp;
                    <span class="inputLabel">
                        CC
                    </span>
                    &nbsp;
                    @Html.CheckBox(indexerCaptionWebVttId, true, new { disabled = "disabled" } )
                    <span class="inputLabel">
                        WebVTT
                    </span>
                    &nbsp;
                    @Html.CheckBox(indexerCaptionTtmlId, false)
                    <span class="inputLabel">
                        TTML
                    </span>
                </td>
            </tr>
            <tr id="@faceDetectionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-face-and-emotion-detection')">
                        Face Detection:
                    </span>
                </td>
                <td>
                    @Html.RadioButton(faceDetectionModeId, "faces", true)
                    <span class="inputLabel faceDetectionMode">
                        Faces Only
                    </span>
                    @Html.RadioButton(faceDetectionModeId, "aggregateEmotion", false)
                    <span class="inputLabel faceDetectionMode">
                        Group Emotion
                    </span>
                    @Html.RadioButton(faceDetectionModeId, "perFaceEmotion", false)
                    <span class="inputLabel">
                        Per Face Emotion
                    </span>
                </td>
            </tr>
            <tr id="@faceRedactionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-face-redaction')">
                        Face Redaction:
                    </span>
                </td>
                <td>
                    @Html.RadioButton(faceRedactionModeId, "analyze", true)
                    <span class="inputLabel faceRedactionMode">
                        Analyze Only
                    </span>
                    @Html.RadioButton(faceRedactionModeId, "redact", false)
                    <span class="inputLabel faceRedactionMode">
                        Apply Redaction
                    </span>
                    @Html.RadioButton(faceRedactionModeId, "combined", false)
                    <span class="inputLabel">
                        Combined Mode
                    </span>
                </td>
            </tr>
            <tr id="@summaryConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-video-summarization')">
                        Summarization:
                    </span>
                </td>
                <td>
                    <table class="spinnerConfig">
                        <tr>
                            <td class="inputLabel">
                                Output Duration
                            </td>
                            <td class="inputLabel">
                                &nbsp;
                                <input id="@summaryDurationMinutesId" value="1" class="spinner d2" />
                                Minutes
                            </td>
                            <td class="inputLabel">
                                &nbsp;
                                <input id="@summaryDurationSecondsId" value="0" class="spinner d2" />
                                Seconds
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@motionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-motion-detection')">
                        Motion Detection:
                    </span>
                </td>
                <td>
                    <span class="inputLabel">
                        Sensitivity
                    </span>
                    <select id="@motionSensitivityLevelId" class="motionSensitivityLevel">
                        <option value="low">Low</option>
                        <option value="medium">Medium</option>
                        <option value="high">High</option>
                    </select>
                    @Html.CheckBox(motionDetectLightChangeId, false, new { @class = "motionDetectLightChange" })
                    <span class="inputLabel">
                        Detect Light Change
                    </span>
                </td>
            </tr>
            <tr id="@hyperlapseConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-hyperlapse-content')">
                        Motion Hyperlapse:
                    </span>
                </td>
                <td>
                    <table class="spinnerConfig">
                        <tr>
                            <td class="inputLabel">
                                <input id="@hyperlapseStartFrameId" value="0" class="spinner d7" />
                                -
                            </td>
                            <td class="inputLabel">
                                <input id="@hyperlapseFrameCountId" value="10000" class="spinner d7" />
                                Frames
                            </td>
                            <td class="inputLabel">
                                &nbsp;
                                <input id="@hyperlapseSpeedId" value="2" class="spinner d2" />
                                Speed
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td class="inputLabel">
                    Output Asset Name:
                </td>
                <td>
                    @Html.TextBox(outputAssetNameId, null, new { @class = "outputAssetName" })
                    &nbsp;
                    <select id="@taskOptionsId" multiple="multiple">
                        <option value="1">Encrypt Task Configuration</option>
                        <option value="2">Do Not Delete Output On Failure</option>
                        <option value="4">Do Not Cancel Job On Failure</option>
                    </select>
                </td>
            </tr>
            <tr id="@encoderOptionsRowId" style="display: none">
                <td />
                <td>
                    @Html.CheckBox(encoderFragmentOutputId, false)
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/dotnet/api/microsoft.windowsazure.mediaservices.client.assetformatoption')">
                        Content Pre-Fragment
                    </span>
                    &nbsp;
                    @Html.CheckBox(contentProtectionId, false, new { onclick = "ShowContentProtection(this)" })
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-content-protection-overview')">
                        Content Protection
                    </span>
                </td>
            </tr>
            <tr id="@contentProtectionRowId" class="contentProtectionRow" style="display: none">
                <td colspan="2">
                    <table>
                        <tr>
                            <td class="contentProtectionLabel">
                                <div class="siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-content-protection-overview')">
                                    Content<br />Protection
                                </div>
                            </td>
                            <td>
                                <table class="contentProtectionOptions">
                                    <tr>
                                        <td class="inputLabel">
                                            Encryption:
                                        </td>
                                        <td>
                                            @Html.CheckBox(contentProtectionAesId, false, new { onchange = "SetContentProtection(this)" })
                                            <span class="inputLabel siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-protect-with-aes128')">
                                                AES
                                            </span>
                                            <span class="contentProtectionOptionsEncryption">
                                                or
                                            </span>
                                            <span class="contentProtectionOptionsEncryptionDrm">
                                                @Html.CheckBox(contentProtectionDrmPlayReadyId, false, new { onchange = "SetContentProtection(this)" })
                                                <span class="inputLabel siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-protect-with-drm')">
                                                    PlayReady
                                                </span>
                                                @Html.CheckBox(contentProtectionDrmWidevineId, false, new { onchange = "SetContentProtection(this)" })
                                                <span class="inputLabel siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-protect-with-drm')">
                                                    Widevine
                                                </span>
                                                @Html.CheckBox(contentProtectionDrmFairPlayId, false, new { onchange = "SetContentProtection(this)", disabled = "disabled" })
                                                <span class="inputLabel siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-protect-hls-with-fairplay')">
                                                    FairPlay
                                                </span>
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="inputLabel">
                                            <span class="inputLabel siteLink" onclick="window.open('http://docs.microsoft.com/en-us/azure/media-services/media-services-dotnet-configure-content-key-auth-policy')">
                                                User Auth:
                                            </span>
                                        </td>
                                        <td>
                                            @Html.CheckBox(contentProtectionAuthTypeTokenId, true)
                                            <span class="inputLabel">
                                                Web Token
                                            </span>
                                            &nbsp;
                                            @Html.CheckBox(contentProtectionAuthTypeAddressId, false, new { onchange = "SetContentAuthAddressRange(this)" })
                                            <span class="inputLabel">
                                                Address Range
                                            </span>
                                            @Html.TextBox(contentProtectionAuthAddressRangeId, null, new { @class = "contentAuthAddressRange", placeholder = "Start IPv4, End IPv4", disabled = "disabled" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </td>
</tr>
