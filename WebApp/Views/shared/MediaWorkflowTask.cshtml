@{
    int taskNumber = 1;
    string taskRowId = string.Concat("mediaWorkflowTaskRow", taskNumber);
    string taskParentId = string.Concat("taskParent", taskNumber);
    string mediaProcessorId = string.Concat("mediaProcessor", taskNumber);
    string encoderConfigRowId = string.Concat("encoderConfigRow", taskNumber);
    string encoderConfigDocId = string.Concat("encoderConfigDoc", taskNumber);
    string encoderConfigDocSchemaId = string.Concat("encoderConfigDocSchema", taskNumber);
    string encoderConfigId = string.Concat("encoderConfig", taskNumber);
    string encoderConfigFileRowId = string.Concat("encoderConfigFileRow", taskNumber);
    string encoderConfigFileId = string.Concat("encoderConfigFile", taskNumber);
    string encoderOptionsRowId = string.Concat("encoderOptionsRow", taskNumber);
    string encoderFragmentOutputId = string.Concat("encoderFragmentOutput", taskNumber);
    string encoderContentProtectionIdPrefix = "encoderContentProtection";
    string encoderContentProtectionId = string.Concat(encoderContentProtectionIdPrefix, taskNumber);
    string encoderContentProtectionRowId = string.Concat(encoderContentProtectionIdPrefix, "Row" + taskNumber);
    string encoderContentProtectionAesId = string.Concat(encoderContentProtectionIdPrefix, "Aes" + taskNumber);
    string encoderContentProtectionDrmPlayReadyId = string.Concat(encoderContentProtectionIdPrefix, "DrmPlayReady" + taskNumber);
    string encoderContentProtectionDrmWidevineId = string.Concat(encoderContentProtectionIdPrefix, "DrmWidevine" + taskNumber);
    string encoderContentProtectionDrmFairPlayId = string.Concat(encoderContentProtectionIdPrefix, "DrmFairPlay" + taskNumber);
    string encoderContentProtectionAuthTypeTokenId = string.Concat(encoderContentProtectionIdPrefix, "AuthTypeToken" + taskNumber);
    string encoderContentProtectionAuthTypeAddressId = string.Concat(encoderContentProtectionIdPrefix, "AuthTypeAddress" + taskNumber);
    string encoderContentProtectionAuthAddressRangeId = string.Concat(encoderContentProtectionIdPrefix, "AuthAddressRange" + taskNumber);
    string indexerConfigRowId = string.Concat("indexerConfigRow", taskNumber);
    string indexerLanguageId = string.Concat("indexerLanguage", taskNumber);
    string indexerSearchPartitionId = string.Concat("indexerSearchPartition", taskNumber);
    string indexerVideoDescriptionId = string.Concat("indexerVideoDescription", taskNumber);
    string indexerVideoMetadataId = string.Concat("indexerVideoMetadata", taskNumber);
    string indexerVideoPublicId = string.Concat("indexerVideoPublic", taskNumber);
    string indexerAudioOnlyId = string.Concat("indexerAudioOnly", taskNumber);
    string summarizationConfigRowId = string.Concat("summarizationConfigRow", taskNumber);
    string summarizationDurationMinutesId = string.Concat("summarizationDurationMinutes", taskNumber);
    string summarizationDurationSecondsId = string.Concat("summarizationDurationSeconds", taskNumber);
    string summarizationFadeTransitionsId = string.Concat("summarizationFadeTransitions", taskNumber);
    string summarizationIncludeAudioId = string.Concat("summarizationIncludeAudio", taskNumber);
    string speechAnalyzerConfigRowId = string.Concat("speechAnalyzerConfigRow", taskNumber);
    string speechAnalyzerLanguageId = string.Concat("speechAnalyzerLanguage", taskNumber);
    string speechAnalyzerCaptionTtmlId = string.Concat("speechAnalyzerCaptionTtml", taskNumber);
    string speechAnalyzerCaptionWebVttId = string.Concat("speechAnalyzerCaptionWebVtt", taskNumber);
    string faceDetectionConfigRowId = string.Concat("faceDetectionConfigRow", taskNumber);
    string faceDetectionModeId = string.Concat("faceDetectionMode", taskNumber);
    string faceDetectionTrackingModeId = string.Concat("faceDetectionTrackingMode", taskNumber);
    string faceDetectionFacesRowId = string.Concat("faceDetectionFacesRow", taskNumber);
    string faceDetectionAggregateEmotionRowId = string.Concat("faceDetectionAggregateEmotionRow", taskNumber);
    string faceDetectionAggregateEmotionWindowId = string.Concat("faceDetectionAggregateEmotionWindow", taskNumber);
    string faceDetectionAggregateEmotionIntervalId = string.Concat("faceDetectionAggregateEmotionInterval", taskNumber);
    string faceRedactionConfigRowId = string.Concat("faceRedactionConfigRow", taskNumber);
    string faceRedactionModeId = string.Concat("faceRedactionMode", taskNumber);
    string faceRedactionBlurModeId = string.Concat("faceRedactionBlurMode", taskNumber);
    string motionDetectionConfigRowId = string.Concat("motionDetectionConfigRow", taskNumber);
    string motionDetectionSensitivityLevelId = string.Concat("motionDetectionSensitivityLevel", taskNumber);
    string motionDetectionLightChangeId = string.Concat("motionDetectionLightChange", taskNumber);
    string motionHyperlapseConfigRowId = string.Concat("motionHyperlapseConfigRow", taskNumber);
    string motionHyperlapseFrameStartId = string.Concat("motionHyperlapseFrameStart", taskNumber);
    string motionHyperlapseFrameEndId = string.Concat("motionHyperlapseFrameEnd", taskNumber);
    string motionHyperlapseSpeedId = string.Concat("motionHyperlapseSpeed", taskNumber);
    string outputAssetNameId = string.Concat("outputAssetName", taskNumber);
    string taskOptionsId = string.Concat("taskOptions", taskNumber);
}

<tr id="@taskRowId" class="mediaWorkflowTaskRow">
    <td class="inputLabel">
        <span class="inputLabelMultiLine">
            Job Task<br>#@taskNumber
        </span>
    </td>
    <td>
        <table class="jobTask">
            <tr>
                <td class="inputLabel">
                    Media Processor
                </td>
                <td>
                    @Html.DropDownList(mediaProcessorId, null, new { @class = "mediaProcessor", onchange = "SetProcessorConfig(this, 1)" })
                    &nbsp;
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-rest-encode-asset#create-a-job-with-chained-tasks')">
                        Use output from Job Task #
                    </span>
                    <select id="@taskParentId" class="jobTaskParent" disabled>
                        <option value=""></option>
                    </select>
                </td>
            </tr>
            <tr id="@encoderConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span id="@encoderConfigDocId" class="inputLabelMultiLine" siteLink>
                        Encoder Config
                        <br>
                        <span id="@encoderConfigDocSchemaId" class="siteLink" style="display: none">
                            (Custom)
                        </span>
                    </span>
                </td>
                <td>
                    <table class="processorConfigTable">
                        <tr>
                            <td>
                                @Html.DropDownList(encoderConfigId, null, new { @class = "mediaProcessorConfig", onchange = "SetEncoderConfigOptions(this)" })
                            </td>
                        </tr>
                        <tr id="@encoderConfigFileRowId" style="display: none">
                            <td>
                                @Html.TextBox(encoderConfigFileId, null, new { @class = "mediaProcessorConfig", onchange = "SetEncoderConfig(this)", type = "file" })
                            </td>
                        </tr>
                        <tr id="@encoderOptionsRowId" style="display: none">
                            <td>
                                @Html.CheckBox(encoderFragmentOutputId, false, new { @class = "inputCheckbox" })
                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/dotnet/api/microsoft.windowsazure.mediaservices.client.assetformatoption')">
                                    Pre-Fragment Output
                                </span>
                                @Html.CheckBox(encoderContentProtectionId, false, new { @class = "inputCheckboxContentProtection", onclick = "ShowContentProtection(this)" })
                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-content-protection-overview')">
                                    Content Protection
                                </span>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@indexerConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/cognitive-services/video-indexer/video-indexer-overview')">
                        Video Indexer
                    </span>
                </td>
                <td>
                    <table class="processorConfigTable">
                        <tr>
                            <td>
                                @Html.DropDownList(indexerLanguageId, ViewData["indexerLanguages"] as SelectListItem[], new { @class = "indexerLanguage" })
                            </td>
                            <td>
                                @Html.TextBox(indexerVideoDescriptionId, null, new { @class = "indexerVideoMetadata", placeholder = "[Video Description]" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.TextBox(indexerSearchPartitionId, null, new { @class = "indexerSearchPartition", placeholder = "[Search Partition]" })
                            </td>
                            <td>
                                @Html.TextBox(indexerVideoMetadataId, null, new { @class = "indexerVideoMetadata", placeholder = "[Video Metadata]" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.CheckBox(indexerAudioOnlyId, false, new { @class = "inputCheckbox" })
                                <span class="inputCheckboxLabel">
                                    Audio Only
                                </span>
                            </td>
                            <td>
                                @Html.CheckBox(indexerVideoPublicId, false, new { @class = "inputCheckbox" })
                                <span class="inputCheckboxLabel">
                                    Public Video
                                </span>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@summarizationConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-video-summarization')">
                        Summarization
                    </span>
                </td>
                <td>
                    <table class="processorConfigTable">
                        <tr>
                            <td class="inputLabel">
                                Output Duration
                                &nbsp;
                            </td>
                            <td class="inputLabel">
                                <input id="@summarizationDurationMinutesId" value="1" class="spinner d2" />
                                &nbsp;
                                Minutes
                                &nbsp;
                            </td>
                            <td class="inputLabel">
                                <input id="@summarizationDurationSecondsId" value="0" class="spinner d2" />
                                &nbsp;
                                Seconds
                                &nbsp;
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3">
                                @Html.CheckBox(summarizationFadeTransitionsId, true, new { @class = "inputCheckbox" })
                                <span class="inputCheckboxLabel">
                                    Fade Transitions
                                </span>
                                &nbsp;&nbsp;
                                @Html.CheckBox(summarizationIncludeAudioId, true, new { @class = "inputCheckbox" })
                                <span class="inputCheckboxLabel">
                                    Include Audio
                                </span>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@speechAnalyzerConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-process-content-with-indexer2')">
                        Speech To Text
                    </span>
                </td>
                <td class="processorConfigRow">
                    <table>
                        <tr>
                            <td class="inputLabel">
                                @Html.DropDownList(speechAnalyzerLanguageId, ViewData["speechAnalyzerLanguages"] as SelectListItem[], new { @class = "speechToTextLanguage" })
                            </td>
                            <td class="inputLabel">
                                Captions
                            </td>
                            <td class="inputLabel">
                                &nbsp;
                                @Html.CheckBox(speechAnalyzerCaptionTtmlId, false, new { @class = "inputCheckbox" })
                                TTML
                            </td>
                            <td class="inputLabel">
                                &nbsp;
                                @Html.CheckBox(speechAnalyzerCaptionWebVttId, true, new { @class = "inputCheckbox", disabled = "disabled" })
                                WebVTT
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@faceDetectionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-face-and-emotion-detection')">
                        Face Detection
                    </span>
                </td>
                <td>
                    <table class="processorConfigTable">
                        <tr>
                            <td>
                                @Html.RadioButton(faceDetectionModeId, "Faces", true, new { onchange = "SetFaceDetectionConfig(this)" })
                                Face Detect
                            </td>
                            <td>
                                @Html.RadioButton(faceDetectionModeId, "AggregateEmotion", false, new { onchange = "SetFaceDetectionConfig(this)", @class = "faceDetectionMode" })
                                Aggregate Emotion
                            </td>
                            <td>
                                @Html.RadioButton(faceDetectionModeId, "PerFaceEmotion", false, new { onchange = "SetFaceDetectionConfig(this)", @class = "faceDetectionMode" })
                                Face Emotion
                            </td>
                        </tr>
                        <tr id="@faceDetectionFacesRowId">
                            <td colspan="3">
                                Tracking Mode
                                <select id="@faceDetectionTrackingModeId" class="faceDetectionTrackingMode">
                                    <option value="Precise">Precise</option>
                                    <option value="Fast">Fast</option>
                                </select>
                            </td>
                        </tr>
                        <tr id="@faceDetectionAggregateEmotionRowId" style="display: none">
                            <td colspan="3">
                                Window (ms)
                                <input id="@faceDetectionAggregateEmotionWindowId" value="500" class="spinner d4" />
                                &nbsp;&nbsp;
                                Interval (ms)
                                <input id="@faceDetectionAggregateEmotionIntervalId" value="500" class="spinner d4" />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@faceRedactionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-face-redaction')">
                        Face Redaction
                    </span>
                </td>
                <td>
                    <table class="processorConfigTable">
                        <tr>
                            <td>
                                @Html.RadioButton(faceRedactionModeId, "Analyze", true)
                                Analyze Only
                            </td>
                            <td>
                                @Html.RadioButton(faceRedactionModeId, "Redact", false)
                                Apply Redaction
                            </td>
                            <td>
                                @Html.RadioButton(faceRedactionModeId, "Combined", false)
                                Combined Mode
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3">
                                Blur Mode
                                <select id="@faceRedactionBlurModeId" class="faceRedactionBlurMode">
                                    <option value="Debug">Debug</option>
                                    <option value="Low">Low</option>
                                    <option value="Med" selected>Medium</option>
                                    <option value="High">High</option>
                                    <option value="Black">Black</option>
                                </select>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@motionDetectionConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-motion-detection')">
                        Motion Detection
                    </span>
                </td>
                <td class="processorConfigRow">
                    <table>
                        <tr>
                            <td class="inputLabel">
                                Sensitivity
                            </td>
                            <td>
                                &nbsp;
                                <select id="@motionDetectionSensitivityLevelId" class="motionSensitivityLevel">
                                    <option value="Low">Low</option>
                                    <option value="Medium">Medium</option>
                                    <option value="High">High</option>
                                </select>
                            </td>
                            <td>
                                &nbsp;
                                @Html.CheckBox(motionDetectionLightChangeId, false, new { @class = "inputCheckbox" })
                            </td>
                            <td class="inputLabel">
                                Detect Light Change
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="@motionHyperlapseConfigRowId" style="display: none">
                <td class="inputLabel">
                    <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-hyperlapse-content')">
                        Motion Hyperlapse
                    </span>
                </td>
                <td class="processorConfigRow">
                    <table>
                        <tr>
                            <td>
                                <span class="motionHyperlapseFrames">
                                    Frames
                                </span>
                            </td>
                            <td>
                                <input id="@motionHyperlapseFrameStartId" value="0" class="spinner d8" />
                            </td>
                            <td>
                                <span class="motionHyperlapseFramesRange">
                                    -
                                </span>
                            </td>
                            <td>
                                <input id="@motionHyperlapseFrameEndId" value="10000" class="spinner d8" />
                            </td>
                            <td>
                                <span class="motionHyperlapseSpeed">
                                    Speed
                                </span>
                            </td>
                            <td>
                                <input id="@motionHyperlapseSpeedId" value="3" class="spinner d2" />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td class="inputLabel">
                    Output Asset Name
                </td>
                <td>
                    @Html.TextBox(outputAssetNameId, null, new { @class = "outputAssetName" })
                    &nbsp;
                    <select id="@taskOptionsId" multiple="multiple">
                        <option value="1">Encrypt Task Configuration</option>
                        <option value="2">Do Not Delete Output On Failure</option>
                        <option value="4">Do Not Cancel Job On Failure</option>
                    </select>
                </td>
            </tr>
            <tr id="@encoderContentProtectionRowId" class="contentProtectionRow" style="display: none">
                <td colspan="2">
                    <table>
                        <tr>
                            <td class="contentProtectionLabel">
                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-content-protection-overview')">
                                    Content<br>Protection
                                </span>
                            </td>
                            <td>
                                <table class="contentProtectionOptions">
                                    <tr>
                                        <td class="inputLabel">
                                            Encryption
                                        </td>
                                        <td>
                                            @Html.CheckBox(encoderContentProtectionAesId, false, new { onchange = "SetContentProtection(this)" })
                                            <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-protect-with-aes128')">
                                                AES
                                            </span>
                                            <span class="contentProtectionOptionsEncryption">
                                                or
                                            </span>
                                            <span class="contentProtectionOptionsEncryptionDrm">
                                                @Html.CheckBox(encoderContentProtectionDrmPlayReadyId, false, new { onchange = "SetContentProtection(this)" })
                                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-protect-with-drm')">
                                                    PlayReady
                                                </span>
                                                @Html.CheckBox(encoderContentProtectionDrmWidevineId, false, new { onchange = "SetContentProtection(this)", @class = "contentProtectionOptionsEncryptionDrmOption" })
                                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-protect-with-drm')">
                                                    Widevine
                                                </span>
                                                @Html.CheckBox(encoderContentProtectionDrmFairPlayId, false, new { onchange = "SetContentProtection(this)", @class = "contentProtectionOptionsEncryptionDrmOption", disabled = "disabled" })
                                                <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-protect-hls-with-fairplay')">
                                                    FairPlay
                                                </span>
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="inputLabel">
                                            <span class="siteLink" onclick="window.open('http://docs.microsoft.com/azure/media-services/media-services-dotnet-configure-content-key-auth-policy')">
                                                Authorization
                                            </span>
                                        </td>
                                        <td>
                                            @Html.CheckBox(encoderContentProtectionAuthTypeTokenId, true)
                                            <span class="inputLabel">
                                                Web Token
                                            </span>
                                            &nbsp;
                                            @Html.CheckBox(encoderContentProtectionAuthTypeAddressId, false, new { onchange = "SetContentAuthAddressRange(this)" })
                                            <span class="inputLabel">
                                                Address Range
                                            </span>
                                            @Html.TextBox(encoderContentProtectionAuthAddressRangeId, null, new { @class = "contentAuthAddressRange", placeholder = "Start IPv4, End IPv4", disabled = "disabled" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </td>
</tr>