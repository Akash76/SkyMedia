{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters, numbers and hyphens only)."
      }
    },
    "keyVaultAdminId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory user admin object identifier for the Key Vault service."
      }
    },
    "storageServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters and numbers only)."
      }
    },
    "databaseServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Name must be between 3 and 31 characters (letters, numbers and hyphens only)."
      }
    },
    "databaseServiceRegions": {
      "type": "array",
      "metadata": {
        "description": "Azure region names for data replication to support distributed reads & writes."
      }
    },
    "trafficManagerProfileNames": {
      "type": "array",
      "metadata": {
        "description": "Profile names (<profileName>.trafficmanager.net) must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "contentDeliveryProfileName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Name must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "contentDeliveryProfileTier": {
      "type": "string",
      "defaultValue": "Standard_Microsoft",
      "metadata": {
        "description": "Resource tier for the Content Delivery Network service."
      }
    },
    "contentDeliveryEndpointName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Endpoint name (<endpointName>.azureedge.net) must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "contentDeliveryEndpointOriginPath": {
      "type": "string",
      "metadata": {
        "description": "Endpoint path (in the form '/path') relative to the origin root."
      }
    },
    "appServiceCertificateName": {
      "type": "string",
      "metadata": {
        "description": "Name must be between 3 and 15 characters (letters and numbers only)."
      }
    },
    "appServiceCertificateDomainName": {
      "type": "string",
      "metadata": {
        "description": "Root domain name for the App Service Certificate."
      }
    },
    "appInsightsRegion": {
      "type": "string",
      "metadata": {
        "description": "Azure region name for the Application Insights service."
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Application Insights service."
      }
    }
  },
  "variables": {
    "keyVaultApiVersion": "2018-02-14",
    "storageApiVersion": "2019-04-01",
    "storageServiceName": "[toLower(parameters('storageServiceName'))]",
    "databaseApiVersion": "2016-03-31",
    "databaseServiceName": "[toLower(parameters('databaseServiceName'))]",
    "trafficManagerApiVersion": "2018-08-01",
    "contentDeliveryApiVersion": "2018-04-02",
    "contentDeliveryEndpointName": "[toLower(parameters('contentDeliveryEndpointName'))]",
    "contentDeliveryEndpointOrigin": "[concat(variables('storageServiceName'), '.blob.core.windows.net')]",
    "certificateRegistrationApiVersion": "2018-02-01",
    "certificateRegistrationDistinguishedName": "[concat('CN=*.', parameters('appServiceCertificateDomainName'))]",
    "appInsightsApiVersion": "2018-05-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "[variables('keyVaultApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('keyVaultName')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Premium"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('keyVaultAdminId')]",
            "permissions": {
              "keys": [
                "All"
              ],
              "secrets": [
                "All"
              ],
              "certificates": [
                "All"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "ed47c2a1-bd23-4341-b39c-f4fd69138dd3",
            "permissions": {
              "secrets": [
                "Get",
                "Set",
                "Delete"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "f8daea97-62e7-4026-becf-13c2ea98e8b4",
            "permissions": {
              "secrets": [
                "Get"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageServiceName')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "[variables('databaseApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('databaseServiceName')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "enableMultipleWriteLocations": true,
        "copy": [
          {
            "name": "locations",
            "count": "[length(parameters('databaseServiceRegions'))]",
            "input": {
              "locationName": "[parameters('databaseServiceRegions')[copyIndex('locations')]]",
              "failoverPriority": "[copyIndex('locations')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "[variables('contentDeliveryApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('contentDeliveryProfileName')]",
      "sku": {
        "name": "[parameters('contentDeliveryProfileTier')]"
      },
      "resources": [
        {
          "type": "endpoints",
          "apiVersion": "[variables('contentDeliveryApiVersion')]",
          "location": "[resourceGroup().location]",
          "name": "[variables('contentDeliveryEndpointName')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName'))]",
            "[resourceId('Microsoft.Cdn/profiles', parameters('contentDeliveryProfileName'))]"
          ],
          "properties": {
            "origins": [
              {
                "name": "[variables('storageServiceName')]",
                "properties": {
                  "hostName": "[variables('contentDeliveryEndpointOrigin')]"
                }
              }
            ],
            "originHostHeader": "[variables('contentDeliveryEndpointOrigin')]",
            "originPath": "[parameters('contentDeliveryEndpointOriginPath')]",
            "isHttpsAllowed": true,
            "isHttpAllowed": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.CertificateRegistration/certificateOrders",
      "name": "[parameters('appServiceCertificateName')]",
      "apiVersion": "[variables('certificateRegistrationApiVersion')]",
      "location": "global",
      "properties": {
        "ProductType": "StandardDomainValidatedWildCardSsl",
        "DistinguishedName": "[variables('certificateRegistrationDistinguishedName')]",
        "ValidityInYears": 1
      }
    },
    {
      "type": "Microsoft.CertificateRegistration/certificateOrders/certificates",
      "name": "[concat(parameters('appServiceCertificateName'), '/', parameters('appServiceCertificateName'))]",
      "apiVersion": "[variables('certificateRegistrationApiVersion')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('appServiceCertificateName'))]"
      ],
      "properties": {
        "keyVaultId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "keyVaultSecretName": "[parameters('appServiceCertificateName')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('appInsightsRegion')]",
      "name": "[parameters('appInsightsName')]",
      "kind": "web",
      "properties": {
      }
    }
  ],
  "outputs": {
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), variables('keyVaultApiVersion')).vaultUri]"
    },
    "storageConnection": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "databaseConnectionReadOnly": {
      "type": "string",
      "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryReadOnlyMasterKey)]"
    },
    "databaseConnectionReadWrite": {
      "type": "string",
      "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryMasterKey)]"
    },
    "contentDeliveryHost": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('contentDeliveryProfileName'), variables('contentDeliveryEndpointName')), variables('contentDeliveryApiVersion')).hostName]"
    },
    "appCertificateThumbprint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('appServiceCertificateName')), variables('certificateRegistrationApiVersion')).signedCertificate.thumbprint]"
    },
    "appInsightsKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), variables('appInsightsApiVersion')).instrumentationKey]"
    }
  }
}
