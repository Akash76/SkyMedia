pipeline {
  agent any
  parameters {
    string(name: 'ARM_TENANT_ID', defaultValue: '72f988bf-86f1-41af-91ab-2d7cd011db47', description: 'Azure Active Directory tenant identifier.')
    string(name: 'ARM_SUBSCRIPTION_ID', defaultValue: '3d07cfbc-17aa-41b4-baa1-488fef85a1d3', description: 'Azure subscription identifier.')
    booleanParam(name: 'ARM_USE_MSI', defaultValue: true, description: 'Azure managed service identity (MSI) authorization.')
    booleanParam(name: 'TF_IN_AUTOMATION', defaultValue: true, description: 'Terraform designator for orchestration context.')
    string(name: 'TF_BACKEND_CONFIG_FILE', defaultValue: 'backend.tf', description: 'Terraform backend configuration file.')
  }
  options {
    disableConcurrentBuilds()
  }
  triggers {
    GenericTrigger(
      genericVariables: [
        [key: 'PULL_REQUEST_LABEL', value: '$.pull_request.head.label'],
        [key: 'PULL_REQUEST_ACTION', value: '$.action'],
        [key: 'PULL_REQUEST_ID', value: '$.pull_request.head.sha'],
        [key: 'BRANCH_NAME', value: '$.pull_request.head.ref']
      ],
      causeString: '$PULL_REQUEST_LABEL',
      regexpFilterText: '$PULL_REQUEST_ACTION',
      regexpFilterExpression: 'opened'
    )
  }
  stages {
    stage('Pipeline Context') {
      steps {
        sh '''#!/bin/bash -xe
          rm -f tfFilePath
          for changedFile in $(git diff --name-only $GIT_COMMIT $PULL_REQUEST_ID)
          do
            if [ ${changedFile: -3} == ".tf" ]
            then
              echo -n "$(dirname $changedFile)" > tfFilePath
              break
            fi
          done
        '''
      }
    }
    stage('Terraform Plan') {
      when {
        expression {
          fileExists('tfFilePath')
        }
      }
      steps {
        sh '''#!/bin/bash -xe
          tfFilePath=$(cat tfFilePath)
          cp $TF_BACKEND_CONFIG_FILE $tfFilePath
          cd $tfFilePath
          terraform init -input=false -backend-config=$TF_BACKEND_CONFIG_FILE
          terraform plan -input=false -out=tfPlan
          git rebase -i $BRANCH_NAME
          git add tfPlan
          git commit -m "Add Terraform plan file"
          git push https://user:$GIT_PAT@github.com/RickShahid/SkyMedia $BRANCH_NAME
        '''
        dir(readFile('tfFilePath').trim()) {
          archiveArtifacts artifacts: '**/*'
        }
      }
    }
  }
}
