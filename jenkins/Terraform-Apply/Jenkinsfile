pipeline {
  agent any
  parameters {
    string(name: 'ARM_TENANT_ID', defaultValue: '72f988bf-86f1-41af-91ab-2d7cd011db47', description: 'Azure Active Directory tenant identifier.')
    string(name: 'ARM_SUBSCRIPTION_ID', defaultValue: '3d07cfbc-17aa-41b4-baa1-488fef85a1d3', description: 'Azure subscription identifier.')
    booleanParam(name: 'ARM_USE_MSI', defaultValue: true, description: 'Azure managed service identity (MSI) authorization.')
    booleanParam(name: 'TF_IN_AUTOMATION', defaultValue: true, description: 'Terraform designator for orchestration context.')
  }
  options {
    disableConcurrentBuilds()
  }
  triggers {
    GenericTrigger(
      genericVariables: [
        [key: 'LABEL', value: '$.pull_request.head.label'],
        [key: 'MERGED', value: '$.pull_request.merged']
      ],
      causeString: '$LABEL',
      regexpFilterText: '$MERGED',
      regexpFilterExpression: 'true'
    )
  }
  stages {
    stage('Validate Context') {
      steps {
        copyArtifacts projectName: 'Terraform-Plan', optional: true
      }
    }
    stage('Terraform Apply') {
      when {
        expression {
          fileExists('tfPlan')
        }
      }
      steps {
        sh '''#!/bin/bash -xe
          terraform apply -input=false tfPlan
        '''
      }
    }
  }
}
