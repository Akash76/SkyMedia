{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageServiceName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Storage service name must be between 3 and 24 characters (letters and numbers only). Leave the default value to skip resource deployment."
      }
    },
    "databaseServiceName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Database service name must be between 3 and 31 characters (letters, numbers and hyphens only). Leave the default value to skip resource deployment."
      }
    },
    "databaseDataRegions": {
      "type": "array",
      "defaultValue": [
        "West US",
        "East US"
      ],
      "metadata": {
        "description": "Array of Azure region names for data replication. The first region listed will be read/write enabled while the other regions listed will be readonly enabled."
      }
    },
    "mediaStorageName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Storage service name must be between 3 and 23 characters (letters and numbers only). Leave the default value to skip resource deployment."
      }
    },
    "mediaStorageRegion": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "Azure region name for deployment of storage service resources that will subsequently be utilized for media service resource deployment."
      }
    },
    "databaseResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the resource group that contains the database service resource."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "000",
      "metadata": {
        "description": "Application Insights service name. Leave the default value to skip resource deployment."
      }
    },
    "appInsightsRegion": {
      "type": "string",
      "defaultValue": "South Central US",
      "metadata": {
        "description": "Azure region name for deployment of application insights service resource."
      }
    },
    "batchServiceName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Batch service name must be between 3 and 24 characters (letters and numbers only). Leave the default value to skip resource deployment."
      }
    },
    "mediaServiceName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Media service name must be between 3 and 24 characters (letters and numbers only). Leave the default value to skip resource deployment."
      }
    },
    "cacheServiceName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Cache service name must be between 3 and 31 characters (letters, numbers and hyphens only). Leave the default value to skip resource deployment."
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "Function app name must be between 2 and 60 characters (letters, numbers and hyphens only). Leave the default value to skip resource deployment."
      }
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "000",
      "minLength": 1,
      "maxLength": 74,
      "metadata": {
        "description": "Logic app name must be between 1 and 74 characters (letters, numbers and hyphens only). Leave the default value to skip resource deployment."
      }
    }
  },
  "variables": {
    "defaultServiceName": "000",
    "storageServiceName": "[toLower(parameters('storageServiceName'))]",
    "databaseServiceName": "[toLower(parameters('databaseServiceName'))]",
    "mediaStorageName": "[toLower(parameters('mediaStorageName'))]",
    "batchServiceName": "[toLower(parameters('batchServiceName'))]",
    "mediaServiceName": "[toLower(parameters('mediaServiceName'))]",
    "cacheServiceName": "[toLower(parameters('cacheServiceName'))]",
    "functionAppName": "[toLower(parameters('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "name": "linkedTemplateDataTier",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/RickShahid/SkyMedia/master/ResourceManager/Template.DataTier.json"
        },
        "parameters": {
          "storageServiceName": {
            "value": "[parameters('storageServiceName')]"
          },
          "databaseServiceName": {
            "value": "[parameters('databaseServiceName')]"
          },
          "databaseDataRegions": {
            "value": "[parameters('databaseDataRegions')]"
          },
          "mediaStorageName": {
            "value": "[parameters('mediaStorageName')]"
          },
          "mediaStorageRegion": {
            "value": "[parameters('mediaStorageRegion')]"
          }
        }
      }
    },
    {
      "condition": "[not(equals(parameters('appInsightsName'), variables('defaultServiceName')))]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "location": "[parameters('appInsightsRegion')]",
      "name": "[parameters('appInsightsName')]",
      "kind": "web",
      "properties": {
      }
    },
    {
      "condition": "[not(equals(variables('batchServiceName'), variables('defaultServiceName')))]",
      "type": "Microsoft.Batch/batchAccounts",
      "apiVersion": "2017-05-01",
      "location": "[parameters('mediaStorageRegion')]",
      "name": "[variables('batchServiceName')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/linkedTemplateDataTier"
      ],
      "properties": {
        "autoStorage": {
          "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('mediaStorageName'), '1'))]"
        }
      }
    },
    {
      "condition": "[not(equals(variables('mediaServiceName'), variables('defaultServiceName')))]",
      "type": "Microsoft.Media/mediaServices",
      "apiVersion": "2015-10-01",
      "location": "[parameters('mediaStorageRegion')]",
      "name": "[variables('mediaServiceName')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/linkedTemplateDataTier"
      ],
      "properties": {
        "storageAccounts": [
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('mediaStorageName'), '1'))]",
            "isPrimary": true
          },
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('mediaStorageName'), '2'))]",
            "isPrimary": false
          },
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('mediaStorageName'), '3'))]",
            "isPrimary": false
          }
        ]
      }
    },
    {
      "condition": "[not(equals(variables('cacheServiceName'), variables('defaultServiceName')))]",
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2017-02-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('cacheServiceName')]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": "0"
        }
      }
    },
    {
      "condition": "[not(equals(variables('functionAppName'), variables('defaultServiceName')))]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('functionAppName')]",
      "kind": "functionapp",
      "dependsOn": [
        "Microsoft.Resources/deployments/linkedTemplateDataTier",
        "[concat('Microsoft.Insights/components/', parameters('appInsightsServiceName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('functionAppName')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=;EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=;EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=;EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Storage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=;EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Database.ReadWrite",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('databaseResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), '2016-03-31').primaryMasterKey)]"
            },
            {
              "name": "Database.ReadOnly",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('databaseResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), '2016-03-31').primaryReadonlyMasterKey)]"
            }
          ]
        },
        "clientAffinityEnabled": false
      }
    }
  ],
  "outputs": {
  }
}