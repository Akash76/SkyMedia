{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters and numbers only)."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service Plan for the web application."
      }
    },
    "appServicePlanTier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Compute resource tier for the App Service Plan."
      }
    },
    "appServicePlanNodeSize": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "Size of each compute node in the App Service Plan."
      }
    },
    "appServicePlanNodeCount": {
      "type": "int",
      "minValue": 1,
      "metadata": {
        "description": "Number of compute nodes in the App Service Plan."
      }
    },
    "appServiceCertificateName": {
      "type": "string",
      "metadata": {
        "description": "Name must be between 3 and 15 characters (letters and numbers only)."
      }
    },
    "webAppName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "Web application name (<appName>.azurewebsites.net) must be between 2 and 60 characters (letters, numbers and hyphens only)."
      }
    },
    "functionAppName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "Function application name (<appName>.azurewebsites.net) must be between 2 and 60 characters (letters, numbers and hyphens only)."
      }
    },
    "functionLiveEventUrl": {
      "type": "string",
      "metadata": {
        "description": "Function event handler url for live event processing."
      }
    },
    "functionPublishAssetUrl": {
      "type": "string",
      "metadata": {
        "description": "Function event handler for media asset publishing."
      }
    },
    "cognitiveServicesName": {
      "type": "string",
      "metadata": {
        "description": "Name must be between 2 and 64 characters (letters and numbers only)."
      }
    },
    "cognitiveServicesTier": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "Azure resource tier for Cognitive Services."
      }
    },
    "globalResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the global services resource group."
      }
    },
    "directoryTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory B2C tenant identifier."
      }
    },
    "directoryAuthorityUrl": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com/{0}/v2.0/",
      "metadata": {
        "description": "Azure Active Directory B2C tenant authority url."
      }
    },
    "directoryDiscoveryPath": {
      "type": "string",
      "defaultValue": ".well-known/openid-configuration",
      "metadata": {
        "description": "Azure Active Directory B2C Open ID Connect Discovery path."
      }
    },
    "directoryPolicyIdSignUpIn": {
      "type": "string",
      "defaultValue": "B2C_1_SignUpIn",
      "metadata": {
        "description": "Azure Active Directory B2C sign up/in policy identifier."
      }
    },
    "directoryClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory B2C client application identifier."
      }
    },
    "directoryClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory B2C client application secret."
      }
    },
    "directoryClientIdStaging": {
      "type": "string",
      "metadata": {
        "description": "(Staging) Azure Active Directory B2C client application identifier."
      }
    },
    "directoryClientSecretStaging": {
      "type": "string",
      "metadata": {
        "description": "(Staging) Azure Active Directory B2C client application secret."
      }
    },
    "keyVaultName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters, numbers and hyphens only)."
      }
    },
    "databaseServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Name must be between 3 and 31 characters (letters, numbers and hyphens only)."
      }
    },
    "databaseServiceRegions": {
      "type": "string",
      "metadata": {
        "description": "Azure region names (delimited by semicolons) for data reads & writes (multi-master)."
      }
    },
    "databaseIdentifier": {
      "type": "string",
      "defaultValue": "MediaInsight",
      "metadata": {
        "description": "Unique identifier of the media insight database."
      }
    },
    "searchServiceName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "Name must be between 2 and 60 characters (letters, numbers and hyphens only)."
      }
    },
    "trafficManagerProfileName": {
      "type": "string",
      "metadata": {
        "description": "Profile name (<profileName>.trafficmanager.net) must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "trafficManagerProfileNameStaging": {
      "type": "string",
      "metadata": {
        "description": "Profile name (<profileName>.trafficmanager.net) must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "appRegionName": {
      "type": "string",
      "metadata": {
        "description": "Azure region name for web application display."
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Application Insights resource."
      }
    }
  },
  "variables": {
    "storageApiVersion": "2018-07-01",
    "storageServiceName": "[toLower(parameters('storageServiceName'))]",
    "webApiVersion": "2018-11-01",
    "webAppName": "[toLower(parameters('webAppName'))]",
    "functionAppName": "[toLower(parameters('functionAppName'))]",
    "cognitiveServicesApiVersion": "2017-04-18",
    "databaseApiVersion": "2016-03-31",
    "databaseServiceName": "[toLower(parameters('databaseServiceName'))]",
    "appRegionNameStaging": "[concat(parameters('appRegionName'), ' - Staging')]",
    "appInsightsApiVersion": "2018-05-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageServiceName')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/serverFarms",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('appServicePlanName')]",
      "sku": {
        "tier": "[parameters('appServicePlanTier')]",
        "name": "[parameters('appServicePlanNodeSize')]",
        "capacity": "[parameters('appServicePlanNodeCount')]"
      }
    },
    {
      "type": "Microsoft.Web/certificates",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('appServiceCertificateName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
        "keyVaultId": "[resourceId(parameters('globalResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "keyVaultSecretName": "[parameters('appServiceCertificateName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('webAppName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName'))]",
        "[resourceId('Microsoft.Web/certificates', parameters('appServiceCertificateName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "https://login.microsoftonline.com"
            ]
          },
          "apiDefinition": {
            "url": "/swagger/v1/swagger.json"
          },
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId(parameters('globalResourceGroupName'), 'Microsoft.Insights/components', parameters('appInsightsName')), variables('appInsightsApiVersion')).instrumentationKey]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "~1"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "recommended"
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "1.0.0"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "1.0.0"
            },
            {
              "name": "App.RegionName",
              "value": "[parameters('appRegionName')]"
            },
            {
              "name": "Directory.ClientId",
              "value": "[parameters('directoryClientId')]"
            },
            {
              "name": "Directory.ClientSecret",
              "value": "[parameters('directoryClientSecret')]"
            },
            {
              "name": "Storage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Database.ReadOnly",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryReadonlyMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.ReadWrite",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.Regions",
              "value": "[parameters('databaseServiceRegions')]"
            },
            {
              "name": "Media.EventGrid.LiveEventUrl",
              "value": "[parameters('functionLiveEventUrl')]"
            },
            {
              "name": "Media.EventGrid.PublishAssetUrl",
              "value": "[parameters('functionPublishAssetUrl')]"
            }
            //{
            //  "name": "Search.ReadOnly",
            //  "value": "[concat('AccountName=', variables('searchServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), variables('searchApiVersion')).primaryReadonlyMasterKey)]"
            //},
            //{
            //  "name": "Search.ReadWrite",
            //  "value": "[concat('AccountName=', variables('searchServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), variables('searchApiVersion')).primaryMasterKey)]"
            //}
          ]
        },
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "[variables('webApiVersion')]",
          "name": "slotConfigNames",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
          ],
          "properties": {
            "appSettingNames": [
              "APPINSIGHTS_INSTRUMENTATIONKEY",
              "App.RegionName",
              "Directory.ClientId",
              "Directory.ClientSecret"
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('webAppName'), '/staging')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ],
      "properties": {
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "https://login.microsoftonline.com"
            ]
          },
          "apiDefinition": {
            "url": "/swagger/v1/swagger.json"
          },
          "appSettings": [
            {
              "name": "App.RegionName",
              "value": "[variables('appRegionNameStaging')]"
            },
            {
              "name": "Directory.ClientId",
              "value": "[parameters('directoryClientIdStaging')]"
            },
            {
              "name": "Directory.ClientSecret",
              "value": "[parameters('directoryClientSecretStaging')]"
            },
            {
              "name": "Storage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Database.ReadOnly",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryReadonlyMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.ReadWrite",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.Regions",
              "value": "[parameters('databaseServiceRegions')]"
            },
            {
              "name": "Media.EventGrid.LiveEventUrl",
              "value": "[parameters('functionLiveEventUrl')]"
            },
            {
              "name": "Media.EventGrid.PublishAssetUrl",
              "value": "[parameters('functionPublishAssetUrl')]"
            }
          ]
        },
        "clientAffinityEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('functionAppName')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId(parameters('globalResourceGroupName'), 'Microsoft.Insights/components', parameters('appInsightsName')), variables('appInsightsApiVersion')).instrumentationKey]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('functionAppName')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Directory.ClientId",
              "value": "[parameters('directoryClientId')]"
            },
            {
              "name": "Directory.TenantId",
              "value": "[parameters('directoryTenantId')]"
            },
            {
              "name": "Directory.TokenScope",
              "value": "https://management.core.windows.net/.default"
            },
            {
              "name": "Directory.AuthorityUrl",
              "value": "[parameters('directoryAuthorityUrl')]"
            },
            {
              "name": "Directory.DiscoveryPath",
              "value": "[parameters('directoryDiscoveryPath')]"
            },
            {
              "name": "Directory.PolicyId.SignUpIn",
              "value": "[parameters('directoryPolicyIdSignUpIn')]"
            },
            {
              "name": "Storage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Storage.SharedAccessMinutes",
              "value": "60"
            },
            {
              "name": "Database.ReadOnly",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryReadonlyMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.ReadWrite",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.Regions",
              "value": "[parameters('databaseServiceRegions')]"
            },
            {
              "name": "Media.EventGrid.LiveEventUrl",
              "value": "[parameters('functionLiveEventUrl')]"
            },
            {
              "name": "Media.EventGrid.PublishAssetUrl",
              "value": "[parameters('functionPublishAssetUrl')]"
            },
            {
              "name": "Media.Indexer.ApiUrl",
              "value": "https://api.videoindexer.ai/"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "[variables('webApiVersion')]",
          "name": "slotConfigNames",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ],
          "properties": {
            "appSettingNames": [
              "APPINSIGHTS_INSTRUMENTATIONKEY",
              "Directory.ClientId"
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('functionAppName'), '/staging')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(variables('functionAppName'), '-staging')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Directory.ClientId",
              "value": "[parameters('directoryClientIdStaging')]"
            },
            {
              "name": "Directory.TenantId",
              "value": "[parameters('directoryTenantId')]"
            },
            {
              "name": "Directory.TokenScope",
              "value": "https://management.core.windows.net/.default"
            },
            {
              "name": "Directory.AuthorityUrl",
              "value": "[parameters('directoryAuthorityUrl')]"
            },
            {
              "name": "Directory.DiscoveryPath",
              "value": "[parameters('directoryDiscoveryPath')]"
            },
            {
              "name": "Directory.PolicyId.SignUpIn",
              "value": "[parameters('directoryPolicyIdSignUpIn')]"
            },
            {
              "name": "Storage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "Storage.SharedAccessMinutes",
              "value": "60"
            },
            {
              "name": "Database.ReadOnly",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryReadonlyMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.ReadWrite",
              "value": "[concat('AccountEndpoint=https://', variables('databaseServiceName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(parameters('globalResourceGroupName'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseServiceName')), variables('databaseApiVersion')).primaryMasterKey, ';DatabaseId=', parameters('databaseIdentifier'))]"
            },
            {
              "name": "Database.Regions",
              "value": "[parameters('databaseServiceRegions')]"
            },
            {
              "name": "Media.EventGrid.LiveEventUrl",
              "value": "[parameters('functionLiveEventUrl')]"
            },
            {
              "name": "Media.EventGrid.PublishAssetUrl",
              "value": "[parameters('functionPublishAssetUrl')]"
            },
            {
              "name": "Media.Indexer.ApiUrl",
              "value": "https://api.videoindexer.ai/"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "[variables('cognitiveServicesApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('cognitiveServicesName')]",
      "kind": "CognitiveServices",
      "sku": {
        "name": "[parameters('cognitiveServicesTier')]"
      },
      "properties": {
        "apiProperties": {
          "statisticsEnabled": true
        }
      }
    }
  ],
  "outputs": {
    "storageConnection": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "cognitiveServicesKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesName')), variables('cognitiveServicesApiVersion')).key1]"
    }
  }
}