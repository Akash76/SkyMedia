{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Name must be between 3 and 23 characters (letters and numbers only)."
      }
    },
    "mediaServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters and numbers only)."
      }
    }
  },
  "variables": {
    "storageApiVersion": "2018-11-01",
    "storageServiceName": "[toLower(parameters('storageServiceName'))]",
    "storageServiceName1": "[concat(variables('storageServiceName'), '1')]",
    "storageServiceName2": "[concat(variables('storageServiceName'), '2')]",
    "mediaApiVersion": "2018-07-01",
    "mediaServiceName": "[toLower(parameters('mediaServiceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageServiceName1')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageServiceName2')]",
      "kind": "BlobStorage",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Media/mediaServices",
      "apiVersion": "[variables('mediaApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('mediaServiceName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName1'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName2'))]"
      ],
      "properties": {
        "storageAccounts": [
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName1'))]",
            "type": "Primary"
          },
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName2'))]",
            "type": "Secondary"
          }
        ]
      },
      "resources": [
        {
          "type": "transforms",
          "apiVersion": "[variables('mediaApiVersion')]",
          "name": "AdaptiveStreaming",
          "dependsOn": [
            "[resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName'))]"
          ],
          "properties": {
            "outputs": [
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.BuiltInStandardEncoderPreset",
                  "presetName": "AdaptiveStreaming"
                }
              }
            ]
          }
        },
        {
          "type": "transforms",
          "apiVersion": "[variables('mediaApiVersion')]",
          "name": "ThumbnailSprite",
          "dependsOn": [
            "[resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName'))]"
          ],
          "properties": {
            "outputs": [
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.StandardEncoderPreset",
                  "codecs": [
                    {
                      "@odata.type": "#Microsoft.Media.JpgImage",
                      "stretchMode": "AutoSize",
                      "start": "0%",
                      "step": "1%",
                      "range": "100%",
                      "layers": [
                        {
                          "width": "10%",
                          "height": "10%",
                          "quality": 90
                        }
                      ],
                      //"columns": 10
                    }
                  ],
                  "formats": [
                    {
                      "@odata.type": "#Microsoft.Media.JpgFormat",
                      "filenamePattern": "Thumbnail{Index}{Extension}"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "transforms",
          "apiVersion": "[variables('mediaApiVersion')]",
          "name": "VideoAnalysis",
          "dependsOn": [
            "[resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName'))]"
          ],
          "properties": {
            "outputs": [
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.VideoAnalyzerPreset",
                  "insightsToExtract": "AllInsights"
                }
              }
            ]
          }
        },
        {
          "type": "transforms",
          "apiVersion": "[variables('mediaApiVersion')]",
          "name": "AdaptiveStreaming, ThumbnailSprite, VideoAnalysis",
          "dependsOn": [
            "[resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName'))]"
          ],
          "properties": {
            "outputs": [
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.BuiltInStandardEncoderPreset",
                  "presetName": "AdaptiveStreaming"
                }
              },
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.StandardEncoderPreset",
                  "codecs": [
                    {
                      "@odata.type": "#Microsoft.Media.JpgImage",
                      "stretchMode": "AutoSize",
                      "start": "0%",
                      "step": "1%",
                      "range": "100%",
                      "layers": [
                        {
                          "width": "10%",
                          "height": "10%",
                          "quality": 90
                        }
                      ]
                      //"columns": 10
                    }
                  ],
                  "formats": [
                    {
                      "@odata.type": "#Microsoft.Media.JpgFormat",
                      "filenamePattern": "Thumbnail{Index}{Extension}"
                    }
                  ]
                }
              },
              {
                "onError": "StopProcessingJob",
                "relativePriority": "Normal",
                "preset": {
                  "@odata.type": "#Microsoft.Media.VideoAnalyzerPreset",
                  "insightsToExtract": "AllInsights"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "storageConnection1": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName1'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName1')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "storageConnection2": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageServiceName2'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageServiceName2')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "mediaAccountId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName')), variables('mediaApiVersion')).mediaServiceId]"
    }
  }
}