{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Name must be between 3 and 23 characters (letters and numbers only)."
      }
    },
    "mediaServiceName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (letters and numbers only)."
      }
    },
    "mediaRegionName": {
      "type": "string",
      "metadata": {
        "description": "Azure region name for all media resources, including storage services."
      }
    },
    "contentDeliveryProfileName": {
      "type": "string",
      "defaultValue": "--",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Name must be between 2 and 64 characters (letters, numbers and hyphens only)."
      }
    },
    "contentDeliveryProfileTier": {
      "type": "string",
      "defaultValue": "Standard_Akamai",
      "allowedValues": [
        "Standard_Akamai",
        "Standard_Microsoft",
        "Standard_Verizon"
      ],
      "metadata": {
        "description": "Resource tier for the Content Delivery Network service."
      }
    }
  },
  "variables": {
    "storageApiVersion": "2018-02-01",
    "storageServiceName": "[toLower(parameters('storageServiceName'))]",
    "storageService1Name": "[concat(variables('storageServiceName'), '1')]",
    "storageService2Name": "[concat(variables('storageServiceName'), '2')]",
    "storageService3Name": "[concat(variables('storageServiceName'), '3')]",
    "mediaApiVersion": "2015-10-01",
    "mediaServiceName": "[toLower(parameters('mediaServiceName'))]",
    "contentDeliveryApiVersion": "2018-04-02"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[parameters('mediaRegionName')]",
      "name": "[variables('storageService1Name')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[parameters('mediaRegionName')]",
      "name": "[variables('storageService2Name')]",
      "kind": "BlobStorage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[parameters('mediaRegionName')]",
      "name": "[variables('storageService3Name')]",
      "kind": "BlobStorage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.Media/mediaServices",
      "apiVersion": "[variables('mediaApiVersion')]",
      "location": "[parameters('mediaRegionName')]",
      "name": "[variables('mediaServiceName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService1Name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService2Name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService3Name'))]"
      ],
      "properties": {
        "storageAccounts": [
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService1Name'))]",
            "isPrimary": true
          },
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService2Name'))]",
            "isPrimary": false
          },
          {
            "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageService3Name'))]",
            "isPrimary": false
          }
        ]
      }
    },
    {
      "condition": "[not(equals(parameters('contentDeliveryProfileName'), '--'))]",
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "[variables('contentDeliveryApiVersion')]",
      "location": "[parameters('mediaRegionName')]",
      "name": "[parameters('contentDeliveryProfileName')]",
      "sku": {
        "name": "[parameters('contentDeliveryProfileTier')]"
      }
    }
  ],
  "outputs": {
    "storage1Connection": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageService1Name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageService1Name')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "storage2Connection": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageService2Name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageService2Name')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "storage3Connection": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageService3Name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageService3Name')), variables('storageApiVersion')).keys[0].value,';EndpointSuffix=core.windows.net')]"
    },
    "mediaEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Media/mediaServices', variables('mediaServiceName')), variables('mediaApiVersion')).apiEndpoints[0].endpoint]"
    }
  }
}