{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Storage account name must be between 3 and 23 characters (letters and numbers only). Leave the default value to skip storage account deployment."
      }
    },
    "databaseAccountName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Database account name must be between 3 and 31 characters (letters, numbers and hyphens only). Leave the default value to skip database account deployment."
      }
    },
    "batchAccountName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Batch account name must be between 3 and 24 characters (letters and numbers only). Leave the default value to skip batch account deployment."
      }
    },
    "mediaAccountName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Media account name must be between 3 and 24 characters (letters and numbers only). Leave the default value to skip media account deployment."
      }
    },
    "cacheAccountName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]",
      "minLength": 3,
      "maxLength": 31,
      "metadata": {
        "description": "Cache account name must be between 3 and 31 characters (letters, numbers and hyphens only). Leave the default value to skip cache account deployment."
      }
    },
    "cacheServiceTier": {
      "type": "string"
    },
    "cacheServiceSize": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]"
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]"
    },
    "appHostingPlanName": {
      "type": "string",
      "defaultValue": "[variables('defaultAccountName')]"
    },
    "appServicePlanTier": {
      "type": "string"
    },
    "appServicePlanNodeSize": {
      "type": "string"
    },
    "appServicePlanNodeCountMinimum": {
      "type": "int"
    },
    "appServicePlanNodeCountMaximum": {
      "type": "int"
    },
    "webSiteName": {
      "type": "string"
    }
  },
  "variables": {
    "defaultAccountName": "---",
    "storageAccountName": "[toLower(parameters('storageAccountName'))]",
    "databaseAccountName": "[toLower(parameters('databaseAccountName'))]",
    "webSiteName": "[toLower(parameters('webSiteName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "name": "linkedTemplateDataTier",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/RickShahid/SkyMedia/master/ResourceManager/Template.DataTier.json"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "databaseAccountName": {
            "value": "[parameters('databaseAccountName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "name": "linkedTemplateAppTier",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/RickShahid/SkyMedia/master/ResourceManager/Template.AppTier.json"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "databaseAccountName": {
            "value": "[parameters('databaseAccountName')]"
          },
          "batchAccountName": {
            "value": "[parameters('batchAccountName')]"
          },
          "mediaAccountName": {
            "value": "[parameters('mediaAccountName')]"
          },
          "cacheAccountName": {
            "value": "[parameters('cacheAccountName')]"
          },
          "cacheServiceTier": {
            "value": "[parameters('cacheServiceTier')]"
          },
          "cacheServiceSize": {
            "value": "[parameters('cacheServiceSize')]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "logicAppName": {
            "value": "[parameters('logicAppName')]"
          }
        }
      }
    },
    {
      "condition": "[not(equals(parameters('appHostingPlanName'), variables('defaultAccountName')))]",
      "type": "Microsoft.Web/serverFarms",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('appHostingPlanName')]",
      "sku": {
        "tier": "[parameters('appServicePlanTier')]",
        "name": "[parameters('appServicePlanNodeSize')]",
        "capacity": "[parameters('appServicePlanNodeCountMinimum')]"
      }
    }
    //{
    //  "condition": "[not(equals(variables('webSiteName'), variables('defaultAccountName')))]",
    //  "type": "Microsoft.Web/sites",
    //  "apiVersion": "2016-08-01",
    //  "location": "[resourceGroup().location]",
    //  "name": "[variables('webSiteName')]",
    //  "properties": {
    //    "serverFarmId": "[resourceId(variables('appTierResourceGroup'), 'Microsoft.Web/serverFarms', variables('appServicePlanName'))]",
    //    "siteConfig": {
    //      "appSettings": [
    //        {
    //          "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
    //          "value": "96f74a64-bf93-458d-9620-179da85f50a4"
    //        },
    //        {
    //          "name": "App.Region",
    //          "value": "[parameters('regionName')]"
    //        },
    //        {
    //          "name": "Directory.ClientId",
    //          "value": "5a5942f5-dfd4-42b4-a82e-37de4cf0ecee"
    //        },
    //        {
    //          "name": "Directory.ClientSecret",
    //          "value": "n1=Q2u]ZNcC#xV=3"
    //        },
    //        {
    //          "name": "Storage",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId(variables('dataTierResourceGroup'), 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2017-06-01').primaryKey, ';EndpointSuffix=core.windows.net')]"
    //        },
    //        {
    //          "name": "Cosmos.Document.ReadOnly",
    //          "value": "[concat('AccountEndpoint=https://', variables('databaseAccountNameDocument'), '.documents.azure.com:443/;AccountKey=', listReadOnlyKeys(resourceId(variables('dataTierResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountNameDocument')), '2016-03-31').primaryKey)]"
    //        },
    //        {
    //          "name": "Cosmos.Document.ReadWrite",
    //          "value": "[concat('AccountEndpoint=https://', variables('databaseAccountNameDocument'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(variables('dataTierResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountNameDocument')), '2016-03-31').primaryKey)]"
    //        },
    //        {
    //          "name": "Cosmos.Table.ReadOnly",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('databaseAccountNameTable'), '.documents.azure.com:443/;AccountKey=', listReadOnlyKeys(resourceId(variables('dataTierResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountNameTable')), '2016-03-31').primaryKey, ';TableEndpoint=https://', variables('databaseAccountNameTable'), '.documents.azure.com')]"
    //        },
    //        {
    //          "name": "Cosmos.Table.ReadWrite",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('databaseAccountNameTable'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId(variables('dataTierResourceGroup'), 'Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountNameTable')), '2016-03-31').primaryKey, ';TableEndpoint=https://', variables('databaseAccountNameTable'), '.documents.azure.com')]"
    //        },
    //        {
    //          "name": "Cache",
    //          "value": "[concat(variables('cacheServiceName'), '.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId(variables('appTierResourceGroup'), 'Microsoft.Cache/redis', variables('cacheServiceName')), '2017-02-01').primaryKey)]"
    //        }
    //      ]
    //    }
    //  }
    //}
    //{
    //  "type": "Microsoft.Network/trafficManagerProfiles",
    //  "apiVersion": "2017-05-01",
    //  "location": "[resourceGroup().location]",
    //  "name": "[variables('webSiteName')]",
    //  "properties": {
    //  }
    //},
    //{
    //  "type": "Microsoft.Cdn/profiles",
    //  "apiVersion": "2017-04-02",
    //  "location": "[resourceGroup().location]",
    //  "name": "[variables('webSiteName')]",
    //  "properties": {
    //    "sku": {
    //      "name": "Standard"
    //    }
    //  }
    //}
  ],
  "outputs": {
  }
}